%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Marcus Marcus) ()
%%Title: (Package_engine.eps)
%%CreationDate: 11/4/2005 1:37 PM
%%BoundingBox: 28 572 478 766
%%HiResBoundingBox: 28.0405 572.4697 477.6787 765.2305
%%DocumentProcessColors: Black
%%DocumentFonts: Arial-BoldMT
%%DocumentSuppliedFonts: Arial-BoldMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registro])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 8.3999 -24.96 603.5999 816.96
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -192 867 1 1012 654 26 0 0 10 83 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
/Arial-BoldMT havefont not {
%%BeginFont: Arial-BoldMT
/Arial-BoldMT
15 dict dup begin
/FontName /Arial-BoldMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -386 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
26 dict dup begin
/K2D {
{
newpath
333 196 m
333 337 l
58 337 l
58 196 l
333 196 l
closepath
} exec
fill
} bind def
/K2E {
{
newpath
214 0 m
214 141 l
73 141 l
73 0 l
214 0 l
closepath
} exec
fill
} bind def
/K41 {
{
newpath
443 733 m
286 733 l
0 0 l
157 0 l
218 167 l
511 167 l
575 0 l
736 0 l
443 733 l
closepath
263 291 m
363 562 l
464 291 l
263 291 l
closepath
} exec
fill
} bind def
/K44 {
{
newpath
75 0 m
353 0 l
408 0 452 5 484 16 c
528 30 562 49 588 74 c
622 107 648 150 667 204 c
682 247 689 299 689 360 c
689 428 681 486 665 533 c
649 580 626 619 595 652 c
564 684 528 706 485 719 c
453 728 406 733 345 733 c
75 733 l
75 0 l
closepath
289 609 m
350 609 390 607 411 602 c
438 596 461 585 479 568 c
497 551 511 527 521 497 c
531 466 536 423 536 366 c
536 310 531 265 521 232 c
511 199 498 176 482 161 c
467 147 447 137 423 131 c
404 126 375 124 333 124 c
223 124 l
223 609 l
289 609 l
closepath
} exec
fill
} bind def
/K45 {
{
newpath
632 0 m
632 124 l
223 124 l
223 323 l
590 323 l
590 447 l
223 447 l
223 609 l
618 609 l
618 733 l
75 733 l
75 0 l
632 0 l
closepath
} exec
fill
} bind def
/K4E {
{
newpath
212 0 m
212 481 l
510 0 l
658 0 l
658 733 l
521 733 l
521 241 l
219 733 l
75 733 l
75 0 l
212 0 l
closepath
} exec
fill
} bind def
/K51 {
{
newpath
729 200 m
746 248 755 304 755 367 c
755 487 723 580 660 646 c
596 713 510 746 401 746 c
292 746 205 713 141 646 c
77 580 45 486 45 367 c
45 246 77 153 141 87 c
205 20 293 -13 405 -13 c
464 -13 517 -3 565 19 c
626 -23 658 -44 663 -47 c
684 -58 706 -67 729 -74 c
783 32 l
740 47 701 68 665 94 c
694 128 715 164 729 200 c
729 200 l
closepath
406 253 m
365 167 l
396 156 426 140 456 121 c
437 114 417 110 396 110 c
339 110 292 131 254 174 c
217 216 198 281 198 366 c
198 451 217 514 254 556 c
291 598 340 619 400 619 c
460 619 509 598 546 556 c
583 515 602 451 602 367 c
602 326 597 289 588 258 c
579 226 565 199 546 177 c
502 211 455 236 406 253 c
406 253 l
closepath
} exec
fill
} bind def
/K53 {
{
newpath
125 50 m
175 7 246 -14 339 -14 c
402 -14 455 -5 498 13 c
541 31 574 58 597 95 c
620 131 632 171 632 213 c
632 259 622 298 603 330 c
583 361 557 386 522 405 c
488 423 435 440 363 457 c
292 474 246 491 228 506 c
213 519 206 534 206 551 c
206 570 214 585 229 596 c
253 614 287 623 330 623 c
371 623 402 615 423 598 c
443 582 457 555 463 517 c
611 523 l
609 591 584 645 538 685 c
492 726 423 746 331 746 c
275 746 227 737 187 720 c
147 703 117 679 96 646 c
75 613 64 578 64 541 c
64 483 86 434 131 393 c
163 365 219 340 298 321 c
359 305 398 295 416 289 c
441 280 459 269 469 257 c
479 245 484 230 484 212 c
484 185 472 162 448 141 c
424 121 388 111 340 111 c
295 111 259 122 233 145 c
206 168 189 203 180 252 c
36 238 l
46 156 75 93 125 50 c
closepath
} exec
fill
} bind def
/K61 {
{
newpath
213 420 m
227 430 246 435 271 435 c
308 435 333 429 346 418 c
359 406 366 386 366 359 c
366 345 l
341 334 295 323 230 311 c
181 301 144 290 119 278 c
93 266 73 248 58 224 c
44 201 37 174 37 144 c
37 99 53 62 84 32 c
116 3 159 -12 213 -12 c
244 -12 273 -6 301 6 c
328 17 354 35 378 58 c
379 55 380 50 383 42 c
388 23 392 9 396 0 c
535 0 l
523 25 514 49 510 71 c
505 93 503 128 503 175 c
505 339 l
505 400 499 441 486 464 c
474 487 452 506 422 521 c
391 536 344 543 282 543 c
213 543 161 531 126 506 c
91 481 66 442 52 390 c
179 367 l
188 392 199 410 213 420 c
closepath
366 225 m
366 192 364 170 361 158 c
355 140 344 124 327 112 c
304 95 281 87 255 87 c
233 87 214 94 200 108 c
185 122 178 139 178 159 c
178 178 187 195 205 208 c
217 215 242 224 281 232 c
320 240 348 247 366 253 c
366 225 l
closepath
} exec
fill
} bind def
/K63 {
{
newpath
455 501 m
417 529 365 543 301 543 c
222 543 159 519 113 470 c
66 421 43 353 43 265 c
43 178 66 111 112 62 c
158 13 220 -12 298 -12 c
366 -12 421 4 462 37 c
502 69 530 117 544 180 c
406 204 l
399 167 387 141 370 126 c
353 111 331 103 304 103 c
269 103 240 116 219 142 c
198 168 187 212 187 275 c
187 331 197 372 218 396 c
239 420 267 432 302 432 c
328 432 350 425 366 411 c
383 397 393 377 398 349 c
537 374 l
520 431 493 473 455 501 c
closepath
} exec
fill
} bind def
/K64 {
{
newpath
561 733 m
420 733 l
420 469 l
377 518 325 543 266 543 c
201 543 148 520 106 473 c
63 426 42 358 42 268 c
42 180 64 111 107 62 c
151 13 203 -12 264 -12 c
294 -12 324 -5 353 10 c
383 25 408 48 430 78 c
430 0 l
561 0 l
561 733 l
closepath
220 395 m
242 422 270 435 304 435 c
338 435 366 422 388 395 c
410 368 421 324 421 263 c
421 209 410 168 387 140 c
364 113 337 99 305 99 c
264 99 232 117 210 154 c
194 179 186 220 186 277 c
186 329 197 369 220 395 c
closepath
} exec
fill
} bind def
/K65 {
{
newpath
347 111 m
332 99 314 93 292 93 c
259 93 233 105 211 128 c
189 151 178 183 177 225 c
529 225 l
531 333 509 413 464 465 c
418 517 356 543 277 543 c
206 543 148 518 102 468 c
56 418 33 350 33 262 c
33 188 50 127 85 79 c
130 18 198 -12 290 -12 c
349 -12 397 1 436 28 c
475 55 503 94 521 145 c
381 169 l
373 142 362 123 347 111 c
closepath
180 311 m
179 349 189 379 209 402 c
229 424 254 435 285 435 c
313 435 338 424 358 403 c
378 382 388 352 389 311 c
180 311 l
closepath
} exec
fill
} bind def
/K67 {
{
newpath
60 -51 m
60 -99 78 -138 116 -169 c
154 -200 218 -216 308 -216 c
355 -216 395 -211 426 -201 c
457 -191 482 -177 501 -159 c
520 -142 534 -117 544 -86 c
555 -55 560 -9 560 54 c
560 531 l
428 531 l
428 456 l
385 514 331 543 266 543 c
202 543 149 520 106 473 c
63 426 42 358 42 269 c
42 198 58 138 91 91 c
133 30 189 0 260 0 c
324 0 377 29 420 87 c
419 9 l
419 -22 417 -44 413 -56 c
406 -72 397 -84 385 -91 c
366 -102 339 -108 302 -108 c
274 -108 253 -103 239 -93 c
230 -86 224 -73 221 -54 c
60 -34 l
60 -41 60 -46 60 -51 c
60 -51 l
closepath
219 396 m
240 422 268 435 302 435 c
336 435 365 422 387 395 c
410 369 421 328 421 273 c
421 221 409 181 386 154 c
362 127 333 114 299 114 c
267 114 240 127 219 153 c
197 179 186 220 186 277 c
186 330 197 370 219 396 c
closepath
} exec
fill
} bind def
/K68 {
{
newpath
72 733 m
72 0 l
213 0 l
213 266 l
213 310 217 344 226 367 c
234 390 248 407 266 418 c
284 429 305 435 328 435 c
349 435 365 431 379 422 c
392 413 402 401 407 386 c
412 371 415 336 415 280 c
415 0 l
556 0 l
556 312 l
556 359 554 394 549 417 c
544 440 535 460 522 479 c
509 498 489 513 463 525 c
437 537 408 543 376 543 c
313 543 258 516 213 463 c
213 733 l
72 733 l
closepath
} exec
fill
} bind def
/K69 {
{
newpath
215 603 m
215 733 l
74 733 l
74 603 l
215 603 l
closepath
215 0 m
215 531 l
74 531 l
74 0 l
215 0 l
closepath
} exec
fill
} bind def
/K6A {
{
newpath
211 603 m
211 733 l
70 733 l
70 603 l
211 603 l
closepath
70 531 m
70 25 l
70 -19 69 -45 66 -54 c
63 -62 56 -70 47 -76 c
38 -82 27 -85 12 -85 c
7 -85 2 -85 -4 -84 c
-10 -83 -16 -82 -23 -81 c
-47 -201 l
-28 -206 -11 -210 5 -212 c
21 -215 37 -216 51 -216 c
90 -216 122 -208 147 -192 c
172 -177 189 -155 198 -127 c
207 -99 211 -52 211 16 c
211 531 l
70 531 l
closepath
} exec
fill
} bind def
/K6C {
{
newpath
215 0 m
215 733 l
74 733 l
74 0 l
215 0 l
closepath
} exec
fill
} bind def
/K6D {
{
newpath
63 0 m
204 0 l
204 258 l
204 309 208 345 215 367 c
223 389 235 406 253 418 c
270 429 290 435 311 435 c
329 435 344 431 354 424 c
365 417 372 406 377 391 c
382 376 385 342 385 291 c
385 0 l
526 0 l
526 255 l
526 305 530 341 538 364 c
545 387 558 405 575 417 c
592 429 611 435 631 435 c
658 435 678 425 691 405 c
700 390 705 356 705 303 c
705 0 l
846 0 l
846 340 l
846 390 841 427 831 450 c
818 480 798 503 771 519 c
744 535 711 543 672 543 c
641 543 612 536 585 522 c
558 508 533 487 509 458 c
493 487 473 508 448 522 c
423 536 393 543 359 543 c
295 543 239 515 193 459 c
193 531 l
63 531 l
63 0 l
closepath
} exec
fill
} bind def
/K6E {
{
newpath
556 330 m
556 371 553 403 548 425 c
543 447 534 466 521 484 c
508 501 488 515 463 526 c
437 537 409 543 378 543 c
308 543 249 513 203 453 c
203 531 l
72 531 l
72 0 l
213 0 l
213 240 l
213 299 217 340 224 362 c
231 384 244 402 263 415 c
282 428 304 435 328 435 c
347 435 364 430 377 421 c
390 412 400 399 406 382 c
412 365 415 328 415 271 c
415 0 l
556 0 l
556 330 l
closepath
} exec
fill
} bind def
/K6F {
{
newpath
75 118 m
98 75 131 43 176 21 c
220 -1 266 -12 315 -12 c
394 -12 459 14 511 67 c
563 120 589 187 589 267 c
589 347 563 413 512 465 c
460 517 394 543 314 543 c
262 543 215 532 172 509 c
130 486 98 452 75 409 c
52 365 40 320 40 273 c
40 212 52 160 75 118 c
closepath
222 386 m
247 414 278 428 314 428 c
351 428 382 414 407 386 c
432 358 444 318 444 267 c
444 213 432 173 407 145 c
382 117 351 103 314 103 c
278 103 247 117 222 145 c
197 173 184 213 184 266 c
184 318 197 358 222 386 c
closepath
} exec
fill
} bind def
/K70 {
{
newpath
70 -202 m
211 -202 l
211 66 l
237 37 262 17 286 6 c
310 -6 337 -12 366 -12 c
427 -12 480 13 523 62 c
566 111 588 180 588 269 c
588 355 567 422 524 471 c
481 519 428 543 367 543 c
331 543 299 535 270 518 c
241 501 218 480 201 453 c
201 531 l
70 531 l
70 -202 l
closepath
243 392 m
265 419 294 432 328 432 c
361 432 388 419 411 392 c
433 365 444 323 444 268 c
444 208 433 165 412 139 c
390 113 363 100 330 100 c
297 100 268 114 244 143 c
221 171 209 215 209 275 c
209 327 220 366 243 392 c
closepath
} exec
fill
} bind def
/K72 {
{
newpath
209 164 m
209 254 213 314 221 342 c
229 370 239 390 253 401 c
266 412 283 417 303 417 c
323 417 345 409 369 394 c
412 517 l
382 534 352 543 320 543 c
297 543 277 537 259 526 c
241 515 221 491 199 456 c
199 531 l
68 531 l
68 0 l
209 0 l
209 164 l
closepath
} exec
fill
} bind def
/K73 {
{
newpath
107 32 m
149 3 206 -12 279 -12 c
358 -12 418 6 459 41 c
500 76 520 117 520 166 c
520 211 505 246 476 271 c
447 295 394 316 320 333 c
245 350 202 363 189 373 c
180 380 175 388 175 398 c
175 410 180 419 191 427 c
207 437 233 442 270 442 c
299 442 321 437 337 426 c
353 415 363 399 369 378 c
502 403 l
489 449 464 484 429 508 c
394 531 340 543 267 543 c
191 543 135 527 98 496 c
62 465 44 426 44 380 c
44 329 65 289 107 261 c
137 240 209 217 322 192 c
346 187 362 181 369 174 c
376 167 379 158 379 147 c
379 132 373 119 361 110 c
342 97 315 90 279 90 c
246 90 220 97 202 111 c
183 125 171 146 165 173 c
24 151 l
37 101 65 61 107 32 c
closepath
} exec
fill
} bind def
/K74 {
{
newpath
222 531 m
222 720 l
81 637 l
81 531 l
16 531 l
16 419 l
81 419 l
81 188 l
81 138 83 105 86 89 c
89 66 96 47 105 34 c
115 20 130 9 150 1 c
171 -8 193 -12 219 -12 c
260 -12 297 -5 330 9 c
318 119 l
293 110 274 105 261 105 c
252 105 244 107 237 112 c
231 117 227 123 225 130 c
223 137 222 162 222 205 c
222 419 l
318 419 l
318 531 l
222 531 l
closepath
} exec
fill
} bind def
/K75 {
{
newpath
554 0 m
554 531 l
413 531 l
413 308 l
413 232 410 184 403 165 c
396 145 383 129 364 116 c
345 103 323 96 300 96 c
279 96 261 101 248 111 c
234 121 225 134 220 151 c
215 167 212 213 212 288 c
212 531 l
71 531 l
71 195 l
71 145 77 106 90 78 c
103 49 123 27 151 12 c
180 -4 212 -12 247 -12 c
282 -12 315 -4 347 13 c
378 29 404 51 423 80 c
423 0 l
554 0 l
closepath
} exec
fill
} bind def
/K79 {
{
newpath
209 -2 m
200 -32 188 -56 173 -75 c
157 -94 133 -104 100 -104 c
82 -104 62 -102 40 -98 c
53 -208 l
79 -213 106 -216 133 -216 c
159 -216 183 -213 205 -208 c
226 -202 244 -194 258 -184 c
273 -174 286 -160 297 -144 c
308 -128 320 -104 332 -73 c
366 20 l
554 531 l
408 531 l
284 154 l
156 531 l
6 531 l
209 -2 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
26 dict dup begin
/K2D [341 0 57 196 334 336] def
Encoding 45 /K2D put
/K2E [285 0 73 0 213 140] def
Encoding 46 /K2E put
/K41 [740 0 0 0 735 733] def
Encoding 65 /K41 put
/K44 [740 0 75 0 688 733] def
Encoding 68 /K44 put
/K45 [683 0 75 0 632 733] def
Encoding 69 /K45 put
/K4E [740 0 75 0 657 733] def
Encoding 78 /K4E put
/K51 [797 0 44 -75 782 746] def
Encoding 81 /K51 put
/K53 [683 0 36 -13 632 746] def
Encoding 83 /K53 put
/K61 [570 0 37 -13 535 543] def
Encoding 97 /K61 put
/K63 [570 0 43 -13 544 543] def
Encoding 99 /K63 put
/K64 [626 0 42 -13 561 733] def
Encoding 100 /K64 put
/K65 [570 0 33 -13 529 543] def
Encoding 101 /K65 put
/K67 [626 0 42 -215 560 543] def
Encoding 103 /K67 put
/K68 [626 0 72 0 557 733] def
Encoding 104 /K68 put
/K69 [285 0 74 0 214 733] def
Encoding 105 /K69 put
/K6A [285 0 -47 -215 211 733] def
Encoding 106 /K6A put
/K6C [285 0 74 0 214 733] def
Encoding 108 /K6C put
/K6D [911 0 63 0 844 543] def
Encoding 109 /K6D put
/K6E [626 0 72 0 557 543] def
Encoding 110 /K6E put
/K6F [626 0 41 -13 589 543] def
Encoding 111 /K6F put
/K70 [626 0 70 -202 588 543] def
Encoding 112 /K70 put
/K72 [399 0 68 0 412 543] def
Encoding 114 /K72 put
/K73 [570 0 24 -13 520 543] def
Encoding 115 /K73 put
/K74 [341 0 15 -13 328 720] def
Encoding 116 /K74 put
/K75 [626 0 72 -13 555 531] def
Encoding 117 /K75 put
/K79 [570 0 6 -215 553 531] def
Encoding 121 /K79 put
end /CharMetrics exch def
end
definefont pop
%%EndFont
} if
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-BoldMT Arial-BoldMT
[/_Arial-BoldMT/Arial-BoldMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Plug-in Adobe fusioni) (Fusioni dinamiche.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plug-in Adobe pennello pattern) (StrPennelloArtist.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plug-in Adobe Pennello artistico) (StrPennelloArtist.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Plug-in pennello calligrafico di Adobe) (Strumento pennello calligrafico.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plug-in Pennello diffusione di Adobe) (Strumento pennello diffusione.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Plug-in Involucro di Adobe) (Involucro e Altera.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Forma composta Adobe) (Modulo elaborazione tracciati.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Simboli.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Riflesso.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registro]) 0 Xs
([Registro]) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Livello 1) Ln
0 A
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
215.2974 754.1143 m
233.2813 754.1143 L
233.2813 764.8921 L
215.2974 764.8921 l
215.2974 754.1143 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M215.2974 754.1143 m
233.2813 754.1143 L
233.2813 764.8921 L
215.2974 764.8921 l
215.2974 754.1143 L
s
0 D
215.2974 754.1143 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M215.2974 714.4478 m
269.1216 714.4478 L
269.1216 754.1143 L
215.2974 754.1143 l
215.2974 714.4478 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M215.2974 714.4478 m
269.1216 714.4478 L
269.1216 754.1143 L
215.2974 754.1143 l
215.2974 714.4478 L
s
0 D
215.2974 714.4478 m
S
*U
u
0 To
1 0 0 1 222.1846 731.9214 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0317 Tc
(\152) Tx 1 0 Tk
TO
0 To
1 0 0 1 224.4312 731.9214 0 Tp
0 Tv
TP
0 Tr
3 Tt
0 TV
0.0239 Tc
(\155\164) Tx 1 0 Tk
TO
0 To
1 0 0 1 234.2217 731.9214 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\056) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 236.3936 731.9214 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
3 Tt
0 TV
0.0239 Tc
(\145) Tx 1 0 Tk
TO
0 To
1 0 0 1 240.8511 731.9214 0 Tp
0 Tv
TP
0 Tr
4 Tt
0 TV
0.0317 Tc
(\156\147\151\156) Tx 1 0 Tk
TO
0 To
1 0 0 1 257.8013 731.9214 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
28.3789 680.2017 m
49.105 680.2017 L
49.105 690.9795 L
28.3789 690.9795 l
28.3789 680.2017 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M28.3789 680.2017 m
49.105 680.2017 L
49.105 690.9795 L
28.3789 690.9795 l
28.3789 680.2017 L
s
0 D
28.3789 680.2017 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M28.3789 640.5352 m
90.6851 640.5352 L
90.6851 680.2017 L
28.3789 680.2017 l
28.3789 640.5352 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M28.3789 640.5352 m
90.6851 640.5352 L
90.6851 680.2017 L
28.3789 680.2017 l
28.3789 640.5352 L
s
0 D
28.3789 640.5352 m
S
*U
u
0 To
1 0 0 1 34.8198 658.0088 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0322 Tc
(\144) Tx 1 0 Tk
TO
0 To
1 0 0 1 39.7212 658.0088 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.0005 Tc
(\141) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 44.1196 658.0088 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0317 Tc
(\164\141) Tx 1 0 Tk
TO
0 To
1 0 0 1 51.2715 658.0088 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\101) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 57.0049 658.0088 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\156) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 61.917 658.0088 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0317 Tc
(\141) Tx 1 0 Tk
TO
0 To
1 0 0 1 66.3823 658.0088 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.0005 Tc
(\154) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 68.5493 658.0088 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0317 Tc
(\171\163\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 79.7266 658.0088 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
113.3242 677.0767 m
131.3086 677.0767 L
131.3086 687.8545 L
113.3242 687.8545 l
113.3242 677.0767 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M113.3242 677.0767 m
131.3086 677.0767 L
131.3086 687.8545 L
113.3242 687.8545 l
113.3242 677.0767 L
s
0 D
113.3242 677.0767 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M113.3242 637.4102 m
167.1489 637.4102 L
167.1489 677.0767 L
113.3242 677.0767 l
113.3242 637.4102 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M113.3242 637.4102 m
167.1489 637.4102 L
167.1489 677.0767 L
113.3242 677.0767 l
113.3242 637.4102 L
s
0 D
113.3242 637.4102 m
S
*U
u
0 To
1 0 0 1 134.2417 654.8838 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\154\157\147) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
201.1396 677.0767 m
219.1235 677.0767 L
219.1235 687.8545 L
201.1396 687.8545 l
201.1396 677.0767 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M201.1396 677.0767 m
219.1235 677.0767 L
219.1235 687.8545 L
201.1396 687.8545 l
201.1396 677.0767 L
s
0 D
201.1396 677.0767 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M201.1396 637.4102 m
254.9639 637.4102 L
254.9639 677.0767 L
201.1396 677.0767 l
201.1396 637.4102 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M201.1396 637.4102 m
254.9639 637.4102 L
254.9639 677.0767 L
201.1396 677.0767 l
201.1396 637.4102 L
s
0 D
201.1396 637.4102 m
S
*U
u
0 To
1 0 0 1 218.4858 654.8838 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
5 Tt
0 TV
0.04 Tc
(\155) Tx 1 0 Tk
TO
0 To
1 0 0 1 225.6138 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\141) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 230.0103 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
5 Tt
0 TV
0.0396 Tc
(\164) Tx 1 0 Tk
TO
0 To
1 0 0 1 232.7046 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.0005 Tc
(\150) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
283.3428 677.0767 m
303.6226 677.0767 L
303.6226 687.8545 L
283.3428 687.8545 l
283.3428 677.0767 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M283.3428 677.0767 m
303.6226 677.0767 L
303.6226 687.8545 L
283.3428 687.8545 l
283.3428 677.0767 L
s
0 D
283.3428 677.0767 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M283.3428 637.4102 m
344.2461 637.4102 L
344.2461 677.0767 L
283.3428 677.0767 l
283.3428 637.4102 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M283.3428 637.4102 m
344.2461 637.4102 L
344.2461 677.0767 L
283.3428 677.0767 l
283.3428 637.4102 L
s
0 D
283.3428 637.4102 m
S
*U
u
0 To
1 0 0 1 287.9985 654.8838 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\116) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 293.7363 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 298.1987 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
3 Tt
0 TV
0.0239 Tc
(\164) Tx 1 0 Tk
TO
0 To
1 0 0 1 300.8774 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 306.1724 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
3 Tt
0 TV
0.0234 Tc
(\164\162) Tx 1 0 Tk
TO
0 To
1 0 0 1 311.9766 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\141) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 316.3779 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 319.0557 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
3 Tt
0 TV
0.0234 Tc
(\145) Tx 1 0 Tk
TO
0 To
1 0 0 1 323.5127 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.001 Tc
(\147) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 328.3623 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
3 Tt
0 TV
0.0234 Tc
(\151\145) Tx 1 0 Tk
TO
0 To
1 0 0 1 335.0586 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
376.7705 677.0767 m
397.5605 677.0767 L
397.5605 687.8545 L
376.7705 687.8545 l
376.7705 677.0767 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M376.7705 677.0767 m
397.5605 677.0767 L
397.5605 687.8545 L
376.7705 687.8545 l
376.7705 677.0767 L
s
0 D
376.7705 677.0767 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M376.7705 637.4102 m
439.1396 637.4102 L
439.1396 677.0767 L
376.7705 677.0767 l
376.7705 637.4102 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M376.7705 637.4102 m
439.1396 637.4102 L
439.1396 677.0767 L
376.7705 677.0767 l
376.7705 637.4102 L
s
0 D
376.7705 637.4102 m
S
*U
u
0 To
1 0 0 1 381.2979 654.8838 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
-1 Tt
0 TV
-0.0078 Tc
(\116) Tx 1 0 Tk
TO
0 To
1 0 0 1 387.0469 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\157) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 391.9512 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
-1 Tt
0 TV
-0.0078 Tc
(\144) Tx 1 0 Tk
TO
0 To
1 0 0 1 396.8125 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 401.2705 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\123) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 406.627 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 411.0254 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\143) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 415.4883 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 418.167 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
-1 Tt
0 TV
-0.0078 Tc
(\151\157) Tx 1 0 Tk
TO
0 To
1 0 0 1 425.2354 654.8838 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\156) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 430.1367 654.8838 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
70.8516 612.4746 m
88.772 612.4746 L
88.772 623.2524 L
70.8516 623.2524 l
70.8516 612.4746 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M70.8516 612.4746 m
88.772 612.4746 L
88.772 623.2524 L
70.8516 623.2524 l
70.8516 612.4746 L
s
0 D
70.8516 612.4746 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M70.8516 572.8081 m
124.6758 572.8081 L
124.6758 612.4746 L
70.8516 612.4746 l
70.8516 572.8081 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M70.8516 572.8081 m
124.6758 572.8081 L
124.6758 612.4746 L
70.8516 612.4746 l
70.8516 572.8081 L
s
0 D
70.8516 572.8081 m
S
*U
u
0 To
1 0 0 1 78.8232 590.2817 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
5 Tt
0 TV
0.0396 Tc
(\121) Tx 1 0 Tk
TO
0 To
1 0 0 1 85.0635 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.0005 Tc
(\165) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 89.9121 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
5 Tt
0 TV
0.0396 Tc
(\145\165) Tx 1 0 Tk
TO
0 To
1 0 0 1 99.2944 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 103.6904 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\116) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 109.4922 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
5 Tt
0 TV
0.0396 Tc
(\145) Tx 1 0 Tk
TO
0 To
1 0 0 1 113.9653 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.0005 Tc
(\164) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
155.8608 612.4746 m
173.7813 612.4746 L
173.7813 623.2524 L
155.8608 623.2524 l
155.8608 612.4746 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M155.8608 612.4746 m
173.7813 612.4746 L
173.7813 623.2524 L
155.8608 623.2524 l
155.8608 612.4746 L
s
0 D
155.8608 612.4746 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M155.8608 572.8081 m
209.6851 572.8081 L
209.6851 612.4746 L
155.8608 612.4746 l
155.8608 572.8081 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M155.8608 572.8081 m
209.6851 572.8081 L
209.6851 612.4746 L
155.8608 612.4746 l
155.8608 572.8081 L
s
0 D
155.8608 572.8081 m
S
*U
u
0 To
1 0 0 1 168.0415 590.2817 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\162) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 171.165 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\141) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 175.627 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
-2 Tt
0 TV
-0.0156 Tc
(\156) Tx 1 0 Tk
TO
0 To
1 0 0 1 180.4805 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.0005 Tc
(\144) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 185.3877 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
-2 Tt
0 TV
-0.0156 Tc
(\157) Tx 1 0 Tk
TO
0 To
1 0 0 1 190.2412 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.0005 Tc
(\155) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
245.0791 612.4746 m
266.7622 612.4746 L
266.7622 623.2524 L
245.0791 623.2524 l
245.0791 612.4746 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M245.0791 612.4746 m
266.7622 612.4746 L
266.7622 623.2524 L
245.0791 623.2524 l
245.0791 612.4746 L
s
0 D
245.0791 612.4746 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M245.0791 572.8081 m
310.2549 572.8081 L
310.2549 612.4746 L
245.0791 612.4746 l
245.0791 572.8081 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M245.0791 572.8081 m
310.2549 572.8081 L
310.2549 612.4746 L
245.0791 612.4746 l
245.0791 572.8081 L
s
0 D
245.0791 572.8081 m
S
*U
u
0 To
1 0 0 1 250.0537 590.2817 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0317 Tc
(\163\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 256.7656 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.0005 Tc
(\155) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 263.8379 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\104) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 269.6396 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0317 Tc
(\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 271.8862 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.0005 Tc
(\163) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 276.2837 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0322 Tc
(\160\141) Tx 1 0 Tk
TO
0 To
1 0 0 1 285.6504 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.0005 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 288.2603 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\143) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 292.7227 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0322 Tc
(\150) Tx 1 0 Tk
TO
0 To
1 0 0 1 297.624 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.0005 Tc
(\145) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 302.0215 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\162) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
338.5703 612.4746 m
356.4902 612.4746 L
356.4902 623.2524 L
338.5703 623.2524 l
338.5703 612.4746 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M338.5703 612.4746 m
356.4902 612.4746 L
356.4902 623.2524 L
338.5703 623.2524 l
338.5703 612.4746 L
s
0 D
338.5703 612.4746 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M338.5703 572.8081 m
392.3945 572.8081 L
392.3945 612.4746 L
338.5703 612.4746 l
338.5703 572.8081 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M338.5703 572.8081 m
392.3945 572.8081 L
392.3945 612.4746 L
338.5703 612.4746 l
338.5703 572.8081 L
s
0 D
338.5703 572.8081 m
S
*U
u
0 To
1 0 0 1 345.2021 590.2817 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
2 Tt
0 TV
0.0156 Tc
(\163) Tx 1 0 Tk
TO
0 To
1 0 0 1 349.6514 590.2817 0 Tp
0 Tv
TP
0 Tr
3 Tt
0 TV
0.0244 Tc
(\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 351.8906 590.2817 0 Tp
0 Tv
TP
0 Tr
2 Tt
0 TV
0.0156 Tc
(\155\105) Tx 1 0 Tk
TO
0 To
1 0 0 1 364.3271 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
-0.001 Tc
(\156) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 369.1797 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\147) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 374.0918 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
3 Tt
0 TV
0.0234 Tc
(\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 376.3301 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.001 Tc
(\156) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 381.1748 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
U

0 0 0 0 1 1 1 Xa
423.5156 612.4746 m
441.5 612.4746 L
441.5 623.2524 L
423.5156 623.2524 l
423.5156 612.4746 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M423.5156 612.4746 m
441.5 612.4746 L
441.5 623.2524 L
423.5156 623.2524 l
423.5156 612.4746 L
s
0 D
423.5156 612.4746 m
S
*U
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M423.5156 572.8081 m
477.3398 572.8081 L
477.3398 612.4746 L
423.5156 612.4746 l
423.5156 572.8081 L
f
*u
1 D
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.677 w 10 M423.5156 572.8081 m
477.3398 572.8081 L
477.3398 612.4746 L
423.5156 612.4746 l
423.5156 572.8081 L
s
0 D
423.5156 572.8081 m
S
*U
u
0 To
1 0 0 1 429.0645 590.2817 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
0 J 0 j 1 w 4 M/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0322 Tc
(\164\145\163) Tx 1 0 Tk
TO
0 To
1 0 0 1 440.6816 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 443.291 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0313 Tc
(\123\171) Tx 1 0 Tk
TO
0 To
1 0 0 1 453.1055 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0 Tc
(\163) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 457.501 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
0 Tt
0 TV
0 Tc
(\164) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 460.1797 590.2817 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.9716 6.8395 -3.001 Tf
100 100 Tz
4 Tt
0 TV
0.0313 Tc
(\145) Tx 1 0 Tk
TO
0 To
1 0 0 1 464.6445 590.2817 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 TV
0.001 Tc
(\155) Tx 1 0 Tk
TO
U

*u
0 0 0 1 0 0 0 Xa
242.0181 713.5547 m
242.0181 714.4478 L
242.082 714.6392 L
242.2095 714.7026 L
242.4009 714.6392 L
242.4644 714.4478 L
242.4644 713.5547 L
242.2095 713.2998 L
242.0181 713.5547 L
F
242.0181 707.7515 m
242.0181 711.1313 L
242.2095 711.3867 L
242.4644 711.1313 L
242.4644 707.7515 L
242.2095 707.5601 L
242.0181 707.7515 L
f
242.0181 702.0117 m
242.0181 705.3921 L
242.2095 705.583 L
242.4644 705.3921 L
242.4644 702.0117 L
242.2095 701.7568 L
242.0181 702.0117 L
f
236.9165 701.8208 m
240.2964 701.8208 L
240.5513 701.5654 L
240.2964 701.3105 L
236.9165 701.3105 L
236.6611 701.5654 L
236.9165 701.8208 L
f
231.1768 701.8208 m
234.4927 701.8208 L
234.748 701.5654 L
234.4927 701.3105 L
231.1768 701.3105 L
230.9214 701.5654 L
231.1768 701.8208 L
f
225.437 701.8208 m
228.7534 701.8208 L
229.0083 701.5654 L
228.7534 701.3105 L
225.437 701.3105 L
225.1821 701.5654 L
225.437 701.8208 L
f
219.6338 701.8208 m
223.0137 701.8208 L
223.269 701.5654 L
223.0137 701.3105 L
219.6338 701.3105 L
219.4424 701.5654 L
219.6338 701.8208 L
f
213.894 701.8208 m
217.2744 701.8208 L
217.4653 701.5654 L
217.2744 701.3105 L
213.894 701.3105 L
213.6392 701.5654 L
213.894 701.8208 L
f
208.1548 701.8208 m
211.4707 701.8208 L
211.7261 701.5654 L
211.4707 701.3105 L
208.1548 701.3105 L
207.8994 701.5654 L
208.1548 701.8208 L
f
202.415 701.8208 m
205.7314 701.8208 L
205.9863 701.5654 L
205.7314 701.3105 L
202.415 701.3105 L
202.1602 701.5654 L
202.415 701.8208 L
f
196.6118 701.8208 m
199.9917 701.8208 L
200.2471 701.5654 L
199.9917 701.3105 L
196.6118 701.3105 L
196.4204 701.5654 L
196.6118 701.8208 L
f
190.8721 701.8208 m
194.2524 701.8208 L
194.4434 701.5654 L
194.2524 701.3105 L
190.8721 701.3105 L
190.6172 701.5654 L
190.8721 701.8208 L
f
185.1328 701.8208 m
188.4487 701.8208 L
188.7041 701.5654 L
188.4487 701.3105 L
185.1328 701.3105 L
184.8774 701.5654 L
185.1328 701.8208 L
f
179.3296 701.8208 m
182.7095 701.8208 L
182.9644 701.5654 L
182.7095 701.3105 L
179.3296 701.3105 L
179.1382 701.5654 L
179.3296 701.8208 L
f
173.5898 701.8208 m
176.9697 701.8208 L
177.2246 701.5654 L
176.9697 701.3105 L
173.5898 701.3105 L
173.335 701.5654 L
173.5898 701.8208 L
f
167.8501 701.8208 m
171.23 701.8208 L
171.4214 701.5654 L
171.23 701.3105 L
167.8501 701.3105 L
167.5952 701.5654 L
167.8501 701.8208 L
f
162.1108 701.8208 m
165.4268 701.8208 L
165.6821 701.5654 L
165.4268 701.3105 L
162.1108 701.3105 L
161.8555 701.5654 L
162.1108 701.8208 L
f
156.3071 701.8208 m
159.6875 701.8208 L
159.9424 701.5654 L
159.6875 701.3105 L
156.3071 701.3105 L
156.1162 701.5654 L
156.3071 701.8208 L
f
150.5679 701.8208 m
153.9478 701.8208 L
154.2026 701.5654 L
153.9478 701.3105 L
150.5679 701.3105 L
150.3125 701.5654 L
150.5679 701.8208 L
f
144.8281 701.8208 m
148.208 701.8208 L
148.3994 701.5654 L
148.208 701.3105 L
144.8281 701.3105 L
144.5732 701.5654 L
144.8281 701.8208 L
f
139.0889 701.8208 m
142.4048 701.8208 L
142.6602 701.5654 L
142.4048 701.3105 L
139.0889 701.3105 L
138.8335 701.5654 L
139.0889 701.8208 L
f
133.2852 701.8208 m
136.6655 701.8208 L
136.9204 701.5654 L
136.6655 701.3105 L
133.2852 701.3105 L
133.0942 701.5654 L
133.2852 701.8208 L
f
127.5459 701.8208 m
130.9258 701.8208 L
131.1807 701.5654 L
130.9258 701.3105 L
127.5459 701.3105 L
127.2905 701.5654 L
127.5459 701.8208 L
f
121.8062 701.8208 m
125.186 701.8208 L
125.3774 701.5654 L
125.186 701.3105 L
121.8062 701.3105 L
121.5513 701.5654 L
121.8062 701.8208 L
f
116.0669 701.8208 m
119.3828 701.8208 L
119.6377 701.5654 L
119.3828 701.3105 L
116.0669 701.3105 L
115.8115 701.5654 L
116.0669 701.8208 L
f
110.2632 701.8208 m
113.6431 701.8208 L
113.8984 701.5654 L
113.6431 701.3105 L
110.2632 701.3105 L
110.0718 701.5654 L
110.2632 701.8208 L
f
104.5239 701.8208 m
107.9038 701.8208 L
108.0952 701.5654 L
107.9038 701.3105 L
104.5239 701.3105 L
104.2686 701.5654 L
104.5239 701.8208 L
f
100.1235 701.8208 m
102.1006 701.8208 L
102.3555 701.5654 L
102.1006 701.3105 L
100.1235 701.3105 L
99.8682 701.5654 L
100.1235 701.8208 L
f
99.9321 702.9688 m
100.1235 702.5859 L
100.187 702.5859 L
100.3149 702.1396 L
100.3149 702.0757 L
100.3784 701.8843 L
100.3784 701.5654 L
100.1235 701.3105 L
99.8682 701.5654 L
99.8682 702.0117 L
99.8682 701.9482 L
99.7407 702.3945 L
99.5493 702.7134 L
99.6133 703.0962 L
99.9321 702.9688 L
f
95.2129 701.8843 m
95.2129 702.1396 L
95.3403 702.5859 L
95.4043 702.5859 l
95.5977 703.3086 96.1631 703.6436 96.7437 703.9888 C
97.1899 704.1162 L
97.2534 704.1162 L
97.5088 704.1802 L
97.7002 704.1802 L
97.9551 703.9253 L
97.7002 703.6699 L
97.3174 703.6699 L
97.3813 703.6699 L
96.9346 703.5425 L
96.5522 703.3511 L
96.6157 703.3511 L
96.2334 703.0322 L
96.2969 703.0962 L
95.978 702.7134 L
96.042 702.7773 L
95.7871 702.3945 L
95.8506 702.3945 L
95.6592 701.9482 L
95.6592 702.0117 L
95.6592 701.8208 L
95.4043 701.6294 L
95.2129 701.8843 L
f
89.9199 701.8208 m
93.2998 701.8208 L
93.5547 701.5654 L
93.2998 701.3105 L
89.9199 701.3105 L
89.7285 701.5654 L
89.9199 701.8208 L
f
84.1802 701.8208 m
87.5601 701.8208 L
87.8154 701.5654 L
87.5601 701.3105 L
84.1802 701.3105 L
83.9253 701.5654 L
84.1802 701.8208 L
f
78.4404 701.8208 m
81.7568 701.8208 L
82.0117 701.5654 L
81.7568 701.3105 L
78.4404 701.3105 L
78.1855 701.5654 L
78.4404 701.8208 L
f
72.7012 701.8208 m
76.0171 701.8208 L
76.2725 701.5654 L
76.0171 701.3105 L
72.7012 701.3105 L
72.4458 701.5654 L
72.7012 701.8208 L
f
66.8979 701.8208 m
70.2778 701.8208 L
70.5327 701.5654 L
70.2778 701.3105 L
66.8979 701.3105 L
66.7065 701.5654 L
66.8979 701.8208 L
f
61.1582 701.8208 m
64.5381 701.8208 L
64.7295 701.5654 L
64.5381 701.3105 L
61.1582 701.3105 L
60.9033 701.5654 L
61.1582 701.8208 L
f
59.3086 697.4839 m
59.3086 700.8003 L
59.5 701.0552 L
59.7554 700.8003 L
59.7554 697.4839 L
59.5 697.229 L
59.3086 697.4839 L
f
59.3086 691.6807 m
59.3086 695.0605 L
59.5 695.3159 L
59.7554 695.0605 L
59.7554 691.6807 L
59.5 691.4893 L
59.3086 691.6807 L
f
59.3086 685.9414 m
59.3086 689.3213 L
59.5 689.5127 L
59.7554 689.3213 L
59.7554 685.9414 L
59.5 685.686 L
59.3086 685.9414 L
f
59.3086 680.2017 m
59.3086 683.5176 L
59.5 683.7729 L
59.7554 683.5176 L
59.7554 680.2017 L
59.6914 680.0103 L
59.5 679.9463 L
59.3726 680.0103 L
59.3086 680.2017 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 710.5576 m
242.0181 713.9375 L
242.2095 714.1289 L
242.4644 713.9375 L
242.4644 710.5576 L
242.2095 710.3022 L
242.0181 710.5576 L
F
242.0181 704.8179 m
242.0181 708.1343 L
242.2095 708.3892 L
242.4644 708.1343 L
242.4644 704.8179 L
242.2095 704.563 L
242.0181 704.8179 L
f
242.0181 699.0146 m
242.0181 702.3945 L
242.2095 702.6494 L
242.4644 702.3945 L
242.4644 699.0146 L
242.2095 698.8232 L
242.0181 699.0146 L
f
237.0439 698.6958 m
240.4238 698.6958 L
240.6787 698.4409 L
240.4238 698.1855 L
237.0439 698.1855 L
236.8525 698.4409 L
237.0439 698.6958 L
f
231.3042 698.6958 m
234.6841 698.6958 L
234.9395 698.4409 L
234.6841 698.1855 L
231.3042 698.1855 L
231.0493 698.4409 L
231.3042 698.6958 L
f
225.5649 698.6958 m
228.9448 698.6958 L
229.1357 698.4409 L
228.9448 698.1855 L
225.5649 698.1855 L
225.3096 698.4409 L
225.5649 698.6958 L
f
219.8252 698.6958 m
223.1411 698.6958 L
223.3965 698.4409 L
223.1411 698.1855 L
219.8252 698.1855 L
219.5698 698.4409 L
219.8252 698.6958 L
f
214.022 698.6958 m
217.4019 698.6958 L
217.6567 698.4409 L
217.4019 698.1855 L
214.022 698.1855 L
213.8306 698.4409 L
214.022 698.6958 L
f
208.2822 698.6958 m
211.6621 698.6958 L
211.9175 698.4409 L
211.6621 698.1855 L
208.2822 698.1855 L
208.0273 698.4409 L
208.2822 698.6958 L
f
202.5425 698.6958 m
205.8589 698.6958 L
206.1138 698.4409 L
205.8589 698.1855 L
202.5425 698.1855 L
202.2876 698.4409 L
202.5425 698.6958 L
f
196.8032 698.6958 m
200.1191 698.6958 L
200.3745 698.4409 L
200.1191 698.1855 L
196.8032 698.1855 L
196.5479 698.4409 L
196.8032 698.6958 L
f
191 698.6958 m
194.3799 698.6958 L
194.6348 698.4409 L
194.3799 698.1855 L
191 698.1855 L
190.8086 698.4409 L
191 698.6958 L
f
185.2603 698.6958 m
188.6401 698.6958 L
188.8315 698.4409 L
188.6401 698.1855 L
185.2603 698.1855 L
185.0054 698.4409 L
185.2603 698.6958 L
f
180.8599 700.2261 m
180.9238 700.29 L
181.3062 700.6089 L
181.689 700.8643 L
181.7529 700.8643 L
182.1992 700.9917 L
182.2627 700.9917 L
182.4541 701.0552 L
183.0283 701.0552 L
183.2832 700.9917 L
183.7295 700.8643 L
183.7935 700.8643 L
184.1763 700.6089 L
184.2397 700.6089 L
184.2397 700.5454 L
184.3037 700.2261 L
183.9849 700.1626 L
183.9209 700.2261 L
183.9849 700.2261 L
183.5386 700.4175 L
183.6021 700.4175 L
183.1558 700.5454 L
183.2197 700.5454 l
182.7637 700.6035 182.3267 700.5879 181.8804 700.4175 C
181.9438 700.4175 L
181.5615 700.2261 L
181.2427 699.9712 L
181.2427 699.9072 L
180.9238 699.9072 L
180.8599 700.2261 L
f
176.4595 698.6958 m
179.7759 698.6958 L
180.0308 698.4409 L
179.7759 698.1855 L
176.4595 698.1855 L
176.2046 698.4409 L
176.4595 698.6958 L
f
170.6563 698.6958 m
174.0361 698.6958 L
174.2915 698.4409 L
174.0361 698.1855 L
170.6563 698.1855 L
170.4648 698.4409 L
170.6563 698.6958 L
f
164.9165 698.6958 m
168.2969 698.6958 L
168.5518 698.4409 L
168.2969 698.1855 L
164.9165 698.1855 L
164.6616 698.4409 L
164.9165 698.6958 L
f
159.1772 698.6958 m
162.4932 698.6958 L
162.7485 698.4409 L
162.4932 698.1855 L
159.1772 698.1855 L
158.9219 698.4409 L
159.1772 698.6958 L
f
153.4375 698.6958 m
156.7539 698.6958 L
157.0088 698.4409 L
156.7539 698.1855 L
153.4375 698.1855 L
153.1826 698.4409 L
153.4375 698.6958 L
f
147.6343 698.6958 m
151.0142 698.6958 L
151.2695 698.4409 L
151.0142 698.1855 L
147.6343 698.1855 L
147.4429 698.4409 L
147.6343 698.6958 L
f
141.8945 698.6958 m
145.2744 698.6958 L
145.4658 698.4409 L
145.2744 698.1855 L
141.8945 698.1855 L
141.6396 698.4409 L
141.8945 698.6958 L
f
140.0454 694.3594 m
140.0454 697.6753 L
140.2368 697.9307 L
140.4917 697.6753 L
140.4917 694.3594 L
140.2368 694.104 L
140.0454 694.3594 L
f
140.0454 688.5557 m
140.0454 691.9355 L
140.2368 692.1909 L
140.4917 691.9355 L
140.4917 688.5557 L
140.2368 688.3647 L
140.0454 688.5557 L
f
140.0454 682.8164 m
140.0454 686.1963 L
140.2368 686.4512 L
140.4917 686.1963 L
140.4917 682.8164 L
140.2368 682.561 L
140.0454 682.8164 L
f
140.0454 677.0767 m
140.0454 680.4565 L
140.2368 680.6479 L
140.4917 680.4565 L
140.4917 677.0767 L
140.4277 676.8853 L
140.2368 676.8218 L
140.1089 676.8853 L
140.0454 677.0767 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 708.9634 m
242.0181 712.3433 L
242.2095 712.5347 L
242.4644 712.3433 L
242.4644 708.9634 L
242.2095 708.708 L
242.0181 708.9634 L
F
242.0181 703.2236 m
242.0181 706.54 L
242.2095 706.7949 L
242.4644 706.54 L
242.4644 703.2236 L
242.2095 702.9688 L
242.0181 703.2236 L
f
241.2529 698.6958 m
242.2095 698.6958 L
242.0181 698.4409 L
242.0181 700.8003 L
242.2095 701.0552 L
242.4644 700.8003 L
242.4644 698.4409 L
242.4009 698.313 L
242.2095 698.2495 L
241.2529 698.2495 L
240.9976 698.4409 L
241.2529 698.6958 L
f
235.4497 698.6958 m
238.8296 698.6958 L
239.0845 698.4409 L
238.8296 698.2495 L
235.4497 698.2495 L
235.2583 698.4409 L
235.4497 698.6958 L
f
229.71 698.6958 m
233.0898 698.6958 L
233.2813 698.4409 L
233.0898 698.2495 L
229.71 698.2495 L
229.4551 698.4409 L
229.71 698.6958 L
f
227.8604 694.3594 m
227.8604 697.6753 L
228.0518 697.9307 L
228.3071 697.6753 L
228.3071 694.3594 L
228.0518 694.104 L
227.8604 694.3594 L
f
227.8604 688.5557 m
227.8604 691.9355 L
228.0518 692.1909 L
228.3071 691.9355 L
228.3071 688.5557 L
228.0518 688.3647 L
227.8604 688.5557 L
f
227.8604 682.8164 m
227.8604 686.1963 L
228.0518 686.4512 L
228.3071 686.1963 L
228.3071 682.8164 L
228.0518 682.561 L
227.8604 682.8164 L
f
227.8604 677.0767 m
227.8604 680.4565 L
228.0518 680.6479 L
228.3071 680.4565 L
228.3071 677.0767 L
228.2432 676.8853 L
228.0518 676.8218 L
227.9243 676.8853 L
227.8604 677.0767 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 712.2158 m
242.0181 714.4478 L
242.082 714.6392 L
242.2095 714.7026 L
242.4009 714.6392 L
242.4644 714.4478 L
242.4644 712.2158 L
242.2095 711.9604 L
242.0181 712.2158 L
F
242.0181 706.4761 m
242.0181 709.856 L
242.2095 710.0474 L
242.4644 709.856 L
242.4644 706.4761 L
242.2095 706.2207 L
242.0181 706.4761 L
f
242.0181 700.7363 m
242.0181 704.0527 L
242.2095 704.3076 L
242.4644 704.0527 L
242.4644 700.7363 L
242.2095 700.4814 L
242.0181 700.7363 L
f
245.7168 698.1855 m
242.4009 698.1855 L
242.1455 698.4409 L
242.4009 698.6958 L
245.7168 698.6958 L
245.9722 698.4409 L
245.7168 698.1855 L
f
251.5205 698.1855 m
248.1401 698.1855 L
247.8853 698.4409 L
248.1401 698.6958 L
251.5205 698.6958 L
251.7114 698.4409 L
251.5205 698.1855 L
f
257.2598 698.1855 m
253.8799 698.1855 L
253.625 698.4409 L
253.8799 698.6958 L
257.2598 698.6958 L
257.5151 698.4409 L
257.2598 698.1855 L
f
262.9995 698.1855 m
259.6831 698.1855 L
259.4282 698.4409 L
259.6831 698.6958 L
262.9995 698.6958 L
263.2544 698.4409 L
262.9995 698.1855 L
f
268.7388 698.1855 m
265.4229 698.1855 L
265.1675 698.4409 L
265.4229 698.6958 L
268.7388 698.6958 L
268.9941 698.4409 L
268.7388 698.1855 L
f
274.5425 698.1855 m
271.1621 698.1855 L
270.9072 698.4409 L
271.1621 698.6958 L
274.5425 698.6958 L
274.7334 698.4409 L
274.5425 698.1855 L
f
278.7515 700.2261 m
278.4326 700.4175 L
278.4961 700.4175 L
278.0498 700.5454 L
278.1138 700.5454 l
277.6577 700.6035 277.2207 700.5879 276.7744 700.4175 C
276.8379 700.4175 L
276.4556 700.2261 L
276.1367 699.9712 L
276.0093 699.7798 L
275.6904 699.7798 L
275.6265 700.0986 l
276.3237 700.792 276.5161 700.8735 277.4121 701.0552 C
277.9224 701.0552 L
278.1772 700.9917 L
278.6235 700.8643 L
278.6875 700.8643 L
279.0063 700.6729 L
279.0703 700.354 L
278.7515 700.2261 L
f
283.3428 698.1855 m
280.0269 698.1855 L
279.8354 698.2495 L
279.7715 698.4409 L
280.0269 698.6958 L
280.2183 698.5044 L
280.2183 698.4409 L
280.0269 698.6958 L
283.3428 698.6958 L
283.5981 698.4409 L
283.3428 698.1855 L
f
289.0825 698.1855 m
285.7661 698.1855 L
285.5112 698.4409 L
285.7661 698.6958 L
289.0825 698.6958 L
289.3374 698.4409 L
289.0825 698.1855 L
f
294.8857 698.1855 m
291.5059 698.1855 L
291.251 698.4409 L
291.5059 698.6958 L
294.8857 698.6958 L
295.0771 698.4409 L
294.8857 698.1855 L
f
300.6255 698.1855 m
297.2456 698.1855 L
297.0542 698.4409 L
297.2456 698.6958 L
300.6255 698.6958 L
300.8804 698.4409 L
300.6255 698.1855 L
f
306.3647 698.1855 m
303.0488 698.1855 L
302.7935 698.4409 L
303.0488 698.6958 L
306.3647 698.6958 L
306.6201 698.4409 L
306.3647 698.1855 L
f
312.1045 698.1855 m
308.7881 698.1855 L
308.5332 698.4409 L
308.7881 698.6958 L
312.1045 698.6958 L
312.3594 698.4409 L
312.1045 698.1855 L
f
313.5078 694.3594 m
313.5078 697.6753 L
313.7627 697.9307 L
314.0176 697.6753 L
314.0176 694.3594 L
313.7627 694.104 L
313.5078 694.3594 L
f
313.5078 688.5557 m
313.5078 691.9355 L
313.7627 692.1909 L
314.0176 691.9355 L
314.0176 688.5557 L
313.7627 688.3647 L
313.5078 688.5557 L
f
313.5078 682.8164 m
313.5078 686.1963 L
313.7627 686.4512 L
314.0176 686.1963 L
314.0176 682.8164 L
313.7627 682.561 L
313.5078 682.8164 L
f
313.5078 677.0767 m
313.5078 680.4565 L
313.7627 680.6479 L
314.0176 680.4565 L
314.0176 677.0767 L
313.9541 676.8853 L
313.7627 676.8218 L
313.6348 676.8853 L
313.5078 677.0767 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 713.2358 m
242.0181 714.4478 L
242.082 714.6392 L
242.2095 714.7026 L
242.4009 714.6392 L
242.4644 714.4478 L
242.4644 713.2358 L
242.2095 712.981 L
242.0181 713.2358 L
F
242.0181 707.4326 m
242.0181 710.8125 L
242.2095 711.0679 L
242.4644 710.8125 L
242.4644 707.4326 L
242.2095 707.2412 L
242.0181 707.4326 L
f
242.0181 701.6929 m
242.0181 705.0732 L
242.2095 705.2646 L
242.4644 705.0732 L
242.4644 701.6929 L
242.2095 701.438 L
242.0181 701.6929 L
f
244.7603 698.1855 m
242.2095 698.1855 L
242.082 698.313 L
242.0181 698.4409 L
242.0181 699.2695 L
242.2095 699.5249 L
242.4644 699.2695 L
242.4644 698.4409 L
242.2095 698.6958 L
244.7603 698.6958 L
245.0156 698.4409 L
244.7603 698.1855 L
f
250.5 698.1855 m
247.1836 698.1855 L
246.9287 698.4409 L
247.1836 698.6958 L
250.5 698.6958 L
250.7549 698.4409 L
250.5 698.1855 L
f
256.2393 698.1855 m
252.9233 698.1855 L
252.668 698.4409 L
252.9233 698.6958 L
256.2393 698.6958 L
256.4946 698.4409 L
256.2393 698.1855 L
f
262.043 698.1855 m
258.6626 698.1855 L
258.4077 698.4409 L
258.6626 698.6958 L
262.043 698.6958 L
262.2979 698.4409 L
262.043 698.1855 L
f
267.7822 698.1855 m
264.4023 698.1855 L
264.2109 698.4409 L
264.4023 698.6958 L
267.7822 698.6958 L
268.0376 698.4409 L
267.7822 698.1855 L
f
273.522 698.1855 m
270.2056 698.1855 L
269.9507 698.4409 L
270.2056 698.6958 L
273.522 698.6958 L
273.7769 698.4409 L
273.522 698.1855 L
f
277.9224 700.5454 m
277.8584 700.5454 L
277.667 700.6089 L
277.4121 700.5454 L
277.2207 700.5454 L
276.7744 700.4175 L
276.8379 700.4175 L
276.4556 700.2261 L
276.1367 699.9712 L
275.8813 699.6523 L
275.6904 699.2695 L
275.6904 699.3335 L
275.6265 699.0146 L
275.3076 698.8872 L
275.1802 699.1421 L
275.2437 699.4609 L
275.499 699.9072 L
275.8179 700.29 L
276.2002 700.6089 L
276.647 700.8643 l
277.2251 701.0269 277.377 701.082 277.9858 701.0552 C
278.1772 700.7363 L
277.9224 700.5454 L
f
282.3862 698.1855 m
280.0269 698.1855 L
279.8354 698.2495 L
279.7715 698.4409 L
279.7715 698.6958 L
279.708 698.8872 L
279.5806 699.3335 L
279.5806 699.2695 L
279.5806 699.3335 L
279.708 699.6523 L
280.0269 699.5249 L
280.0269 699.4609 L
280.2183 699.0146 L
280.2183 698.4409 L
280.0269 698.6958 L
282.3862 698.6958 L
282.5776 698.4409 L
282.3862 698.1855 L
f
288.126 698.1855 m
284.7461 698.1855 L
284.5547 698.4409 L
284.7461 698.6958 L
288.126 698.6958 L
288.3809 698.4409 L
288.126 698.1855 L
f
293.8652 698.1855 m
290.5493 698.1855 L
290.2939 698.4409 L
290.5493 698.6958 L
293.8652 698.6958 L
294.1206 698.4409 L
293.8652 698.1855 L
f
299.605 698.1855 m
296.2891 698.1855 L
296.0337 698.4409 L
296.2891 698.6958 L
299.605 698.6958 L
299.8604 698.4409 L
299.605 698.1855 L
f
305.4082 698.1855 m
302.0283 698.1855 L
301.7734 698.4409 L
302.0283 698.6958 L
305.4082 698.6958 L
305.6636 698.4409 L
305.4082 698.1855 L
f
311.1475 698.1855 m
307.7676 698.1855 L
307.5762 698.4409 L
307.7676 698.6958 L
311.1475 698.6958 L
311.4033 698.4409 L
311.1475 698.1855 L
f
316.8877 698.1855 m
313.5713 698.1855 L
313.3164 698.4409 L
313.5713 698.6958 L
316.8877 698.6958 L
317.1426 698.4409 L
316.8877 698.1855 L
f
322.6904 698.1855 m
319.3105 698.1855 L
319.0557 698.4409 L
319.3105 698.6958 L
322.6904 698.6958 L
322.8818 698.4409 L
322.6904 698.1855 L
f
328.4307 698.1855 m
325.0508 698.1855 L
324.7949 698.4409 L
325.0508 698.6958 L
328.4307 698.6958 L
328.6855 698.4409 L
328.4307 698.1855 L
f
334.1699 698.1855 m
330.79 698.1855 L
330.5986 698.4409 L
330.79 698.6958 L
334.1699 698.6958 L
334.4248 698.4409 L
334.1699 698.1855 L
f
339.9092 698.1855 m
336.5938 698.1855 L
336.3379 698.4409 L
336.5938 698.6958 L
339.9092 698.6958 L
340.1641 698.4409 L
339.9092 698.1855 L
f
345.7129 698.1855 m
342.333 698.1855 L
342.0781 698.4409 L
342.333 698.6958 L
345.7129 698.6958 L
345.9043 698.4409 L
345.7129 698.1855 L
f
351.4521 698.1855 m
348.0723 698.1855 L
347.8174 698.4409 L
348.0723 698.6958 L
351.4521 698.6958 L
351.707 698.4409 L
351.4521 698.1855 L
f
357.1924 698.1855 m
353.8115 698.1855 L
353.6211 698.4409 L
353.8115 698.6958 L
357.1924 698.6958 L
357.4473 698.4409 L
357.1924 698.1855 L
f
362.9316 698.1855 m
359.6152 698.1855 L
359.3604 698.4409 L
359.6152 698.6958 L
362.9316 698.6958 L
363.1865 698.4409 L
362.9316 698.1855 L
f
367.0127 699.9072 m
366.9492 699.9712 L
367.0127 699.9712 L
366.6299 700.2261 L
366.6943 700.2261 L
366.248 700.4175 L
366.3115 700.4175 L
365.8652 700.5454 L
365.9287 700.5454 l
365.4727 700.6035 365.0361 700.5879 364.5898 700.4175 C
364.6533 700.4175 L
364.2705 700.2261 L
364.2705 700.1626 L
363.8877 700.2261 L
363.9521 700.5454 L
364.0156 700.6089 L
364.4619 700.8643 L
364.9082 700.9917 L
364.9727 700.9917 L
365.2275 701.0552 L
365.7373 701.0552 L
365.9922 700.9917 L
366.4395 700.8643 L
366.5029 700.8643 L
366.8857 700.6089 L
366.9492 700.6089 L
367.2676 700.29 L
367.332 700.29 L
367.332 699.9072 L
367.0127 699.9072 L
f
371.7959 698.1855 m
368.416 698.1855 L
368.1611 698.4409 L
368.416 698.6958 L
371.7959 698.6958 L
372.0508 698.4409 L
371.7959 698.1855 L
f
377.5352 698.1855 m
374.1553 698.1855 L
373.9639 698.4409 L
374.1553 698.6958 L
377.5352 698.6958 L
377.791 698.4409 L
377.5352 698.1855 L
f
383.2754 698.1855 m
379.959 698.1855 L
379.7041 698.4409 L
379.959 698.6958 L
383.2754 698.6958 L
383.5303 698.4409 L
383.2754 698.1855 L
f
389.0781 698.1855 m
385.6982 698.1855 L
385.4434 698.4409 L
385.6982 698.6958 L
389.0781 698.6958 L
389.2695 698.4409 L
389.0781 698.1855 L
f
394.8184 698.1855 m
391.4375 698.1855 L
391.1826 698.4409 L
391.4375 698.6958 L
394.8184 698.6958 L
395.0732 698.4409 L
394.8184 698.1855 L
f
400.5576 698.1855 m
397.1777 698.1855 L
396.9863 698.4409 L
397.1777 698.6958 L
400.5576 698.6958 L
400.8125 698.4409 L
400.5576 698.1855 L
f
406.2969 698.1855 m
402.9805 698.1855 L
402.7256 698.4409 L
402.9805 698.6958 L
406.2969 698.6958 L
406.5518 698.4409 L
406.2969 698.1855 L
f
407.7002 694.3594 m
407.7002 697.6753 L
407.9551 697.9307 L
408.21 697.6753 L
408.21 694.3594 L
407.9551 694.104 L
407.7002 694.3594 L
f
407.7002 688.5557 m
407.7002 691.9355 L
407.9551 692.1909 L
408.21 691.9355 L
408.21 688.5557 L
407.9551 688.3647 L
407.7002 688.5557 L
f
407.7002 682.8164 m
407.7002 686.1963 L
407.9551 686.4512 L
408.21 686.1963 L
408.21 682.8164 L
407.9551 682.561 L
407.7002 682.8164 L
f
407.7002 677.0767 m
407.7002 680.4565 L
407.9551 680.6479 L
408.21 680.4565 L
408.21 677.0767 L
408.1465 676.8853 L
407.9551 676.8218 L
407.7637 676.8853 L
407.7002 677.0767 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 709.792 m
242.0181 713.1084 L
242.2095 713.3633 L
242.4644 713.1084 L
242.4644 709.792 L
242.2095 709.5371 L
242.0181 709.792 L
F
240.2964 706.2207 m
242.2095 706.2207 L
242.0181 705.9658 L
242.0181 707.3691 L
242.2095 707.624 L
242.4644 707.3691 L
242.4644 705.9658 L
242.4009 705.7744 L
242.2095 705.7109 L
240.2964 705.7109 L
240.041 705.9658 L
240.2964 706.2207 L
f
234.5566 706.2207 m
237.873 706.2207 L
238.1279 705.9658 L
237.873 705.7109 L
234.5566 705.7109 L
234.3018 705.9658 L
234.5566 706.2207 L
f
228.7534 706.2207 m
232.1333 706.2207 L
232.3882 705.9658 L
232.1333 705.7109 L
228.7534 705.7109 L
228.562 705.9658 L
228.7534 706.2207 L
f
223.0137 706.2207 m
226.3936 706.2207 L
226.6489 705.9658 L
226.3936 705.7109 L
223.0137 705.7109 L
222.7588 705.9658 L
223.0137 706.2207 L
f
217.2744 706.2207 m
220.5903 706.2207 L
220.8457 705.9658 L
220.5903 705.7109 L
217.2744 705.7109 L
217.019 705.9658 L
217.2744 706.2207 L
f
211.5347 706.2207 m
214.8511 706.2207 L
215.106 705.9658 L
214.8511 705.7109 L
211.5347 705.7109 L
211.2798 705.9658 L
211.5347 706.2207 L
f
205.7314 706.2207 m
209.1113 706.2207 L
209.3662 705.9658 L
209.1113 705.7109 L
205.7314 705.7109 L
205.54 705.9658 L
205.7314 706.2207 L
f
199.9917 706.2207 m
203.3716 706.2207 L
203.563 705.9658 L
203.3716 705.7109 L
199.9917 705.7109 L
199.7368 705.9658 L
199.9917 706.2207 L
f
194.2524 706.2207 m
197.5684 706.2207 L
197.8232 705.9658 L
197.5684 705.7109 L
194.2524 705.7109 L
193.9971 705.9658 L
194.2524 706.2207 L
f
188.5127 706.2207 m
191.8286 706.2207 L
192.084 705.9658 L
191.8286 705.7109 L
188.5127 705.7109 L
188.2573 705.9658 L
188.5127 706.2207 L
f
182.7095 706.2207 m
186.0894 706.2207 L
186.3442 705.9658 L
186.0894 705.7109 L
182.7095 705.7109 L
182.5181 705.9658 L
182.7095 706.2207 L
f
176.9697 706.2207 m
180.3496 706.2207 L
180.541 705.9658 L
180.3496 705.7109 L
176.9697 705.7109 L
176.7148 705.9658 L
176.9697 706.2207 L
f
171.23 706.2207 m
174.5464 706.2207 L
174.8013 705.9658 L
174.5464 705.7109 L
171.23 705.7109 L
170.9751 705.9658 L
171.23 706.2207 L
f
165.4268 706.2207 m
168.8066 706.2207 L
169.062 705.9658 L
168.8066 705.7109 L
165.4268 705.7109 L
165.2354 705.9658 L
165.4268 706.2207 L
f
159.6875 706.2207 m
163.0674 706.2207 L
163.3223 705.9658 L
163.0674 705.7109 L
159.6875 705.7109 L
159.4321 705.9658 L
159.6875 706.2207 L
f
153.9478 706.2207 m
157.3276 706.2207 L
157.519 705.9658 L
157.3276 705.7109 L
153.9478 705.7109 L
153.6929 705.9658 L
153.9478 706.2207 L
f
148.208 706.2207 m
151.5244 706.2207 L
151.7793 705.9658 L
151.5244 705.7109 L
148.208 705.7109 L
147.9531 705.9658 L
148.208 706.2207 L
f
142.4048 706.2207 m
145.7847 706.2207 L
146.04 705.9658 L
145.7847 705.7109 L
142.4048 705.7109 L
142.2134 705.9658 L
142.4048 706.2207 L
f
136.6655 706.2207 m
140.0454 706.2207 L
140.3003 705.9658 L
140.0454 705.7109 L
136.6655 705.7109 L
136.4102 705.9658 L
136.6655 706.2207 L
f
130.9258 706.2207 m
134.3057 706.2207 L
134.4971 705.9658 L
134.3057 705.7109 L
130.9258 705.7109 L
130.6709 705.9658 L
130.9258 706.2207 L
f
125.186 706.2207 m
128.5024 706.2207 L
128.7573 705.9658 L
128.5024 705.7109 L
125.186 705.7109 L
124.9312 705.9658 L
125.186 706.2207 L
f
119.3828 706.2207 m
122.7627 706.2207 L
123.0181 705.9658 L
122.7627 705.7109 L
119.3828 705.7109 L
119.1914 705.9658 L
119.3828 706.2207 L
f
113.6431 706.2207 m
117.0234 706.2207 L
117.2783 705.9658 L
117.0234 705.7109 L
113.6431 705.7109 L
113.3882 705.9658 L
113.6431 706.2207 L
f
107.9038 706.2207 m
111.2837 706.2207 L
111.4751 705.9658 L
111.2837 705.7109 L
107.9038 705.7109 L
107.6484 705.9658 L
107.9038 706.2207 L
f
102.1641 706.2207 m
105.4805 706.2207 L
105.7354 705.9658 L
105.4805 705.7109 L
102.1641 705.7109 L
101.9092 705.9658 L
102.1641 706.2207 L
f
97.5088 704.563 m
97.5088 705.9658 L
97.5728 706.1572 L
97.7637 706.2207 L
99.7407 706.2207 L
99.9961 705.9658 L
99.7407 705.7109 L
97.7637 705.7109 L
98.019 705.9658 L
98.019 704.563 L
97.7637 704.3716 L
97.5088 704.563 L
f
97.5088 698.8232 m
97.5088 702.2031 L
97.7637 702.3945 L
98.019 702.2031 L
98.019 698.8232 L
97.7637 698.5684 L
97.5088 698.8232 L
f
97.5088 693.084 m
97.5088 696.3999 L
97.7637 696.6553 L
98.019 696.3999 L
98.019 693.084 L
97.7637 692.8286 L
97.5088 693.084 L
f
97.5088 687.3442 m
97.5088 690.6602 L
97.7637 690.9155 L
98.019 690.6602 L
98.019 687.3442 L
97.7637 687.0889 L
97.5088 687.3442 L
f
97.5088 681.541 m
97.5088 684.9209 L
97.7637 685.1758 L
98.019 684.9209 L
98.019 681.541 L
97.7637 681.3496 L
97.5088 681.541 L
f
97.5088 675.8013 m
97.5088 679.1812 L
97.7637 679.3726 L
98.019 679.1812 L
98.019 675.8013 L
97.7637 675.5464 L
97.5088 675.8013 L
f
97.5088 670.0615 m
97.5088 673.3779 L
97.7637 673.6328 L
98.019 673.3779 L
98.019 670.0615 L
97.7637 669.8066 L
97.5088 670.0615 L
f
97.5088 664.2583 m
97.5088 667.6382 L
97.7637 667.8936 L
98.019 667.6382 L
98.019 664.2583 L
97.7637 664.0669 L
97.5088 664.2583 L
f
97.5088 658.5186 m
97.5088 661.8989 L
97.7637 662.1538 L
98.019 661.8989 L
98.019 658.5186 L
97.7637 658.2637 L
97.5088 658.5186 L
f
97.5088 652.7793 m
97.5088 656.1592 L
97.7637 656.3506 L
98.019 656.1592 L
98.019 652.7793 L
97.7637 652.5244 L
97.5088 652.7793 L
f
97.5088 647.0396 m
97.5088 650.356 L
97.7637 650.6108 L
98.019 650.356 L
98.019 647.0396 L
97.7637 646.7847 L
97.5088 647.0396 L
f
97.5088 641.2363 m
97.5088 644.6162 L
97.7637 644.8716 L
98.019 644.6162 L
98.019 641.2363 L
97.7637 641.0449 L
97.5088 641.2363 L
f
97.5088 635.4971 m
97.5088 638.877 L
97.7637 639.1318 L
98.019 638.877 L
98.019 635.4971 L
97.7637 635.2417 L
97.5088 635.4971 L
f
97.5088 629.7573 m
97.5088 633.1372 L
97.7637 633.3286 L
98.019 633.1372 L
98.019 629.7573 L
97.7637 629.502 L
97.5088 629.7573 L
f
97.5088 624.0176 m
97.5088 627.334 L
97.7637 627.5889 L
98.019 627.334 L
98.019 624.0176 L
97.7637 623.7627 L
97.5088 624.0176 L
f
97.5088 618.2144 m
97.5088 621.5942 L
97.7637 621.8496 L
98.019 621.5942 L
98.019 618.2144 L
97.7637 618.0229 L
97.5088 618.2144 L
f
97.5088 612.4746 m
97.5088 615.855 L
97.7637 616.1099 L
98.019 615.855 L
98.019 612.4746 L
97.9551 612.2832 L
97.7637 612.2197 L
97.5728 612.2832 L
97.5088 612.4746 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 714.1924 m
242.0181 714.4478 L
242.082 714.6392 L
242.2095 714.7026 L
242.4009 714.6392 L
242.4644 714.4478 L
242.4644 714.1924 L
242.2095 713.9375 L
242.0181 714.1924 L
F
242.0181 708.3892 m
242.0181 711.769 L
242.2095 712.0244 L
242.4644 711.769 L
242.4644 708.3892 L
242.2095 708.1978 L
242.0181 708.3892 L
f
241.0615 704.0527 m
242.2095 704.0527 L
242.0181 703.8613 L
242.0181 706.0298 L
242.2095 706.2847 L
242.4644 706.0298 L
242.4644 703.8613 L
242.4009 703.6699 L
242.2095 703.6064 L
241.0615 703.6064 L
240.8066 703.8613 L
241.0615 704.0527 L
f
235.3218 704.0527 m
238.6382 704.0527 L
238.8931 703.8613 L
238.6382 703.6064 L
235.3218 703.6064 L
235.0669 703.8613 L
235.3218 704.0527 L
f
229.5186 704.0527 m
232.8984 704.0527 L
233.1538 703.8613 L
232.8984 703.6064 L
229.5186 703.6064 L
229.3271 703.8613 L
229.5186 704.0527 L
f
223.7793 704.0527 m
227.1592 704.0527 L
227.4141 703.8613 L
227.1592 703.6064 L
223.7793 703.6064 L
223.5239 703.8613 L
223.7793 704.0527 L
f
218.0396 704.0527 m
221.3555 704.0527 L
221.6108 703.8613 L
221.3555 703.6064 L
218.0396 703.6064 L
217.7842 703.8613 L
218.0396 704.0527 L
f
212.2998 704.0527 m
215.6162 704.0527 L
215.8711 703.8613 L
215.6162 703.6064 L
212.2998 703.6064 L
212.0449 703.8613 L
212.2998 704.0527 L
f
206.4966 704.0527 m
209.8765 704.0527 L
210.1318 703.8613 L
209.8765 703.6064 L
206.4966 703.6064 L
206.3052 703.8613 L
206.4966 704.0527 L
f
200.7568 704.0527 m
204.1372 704.0527 L
204.3281 703.8613 L
204.1372 703.6064 L
200.7568 703.6064 L
200.502 703.8613 L
200.7568 704.0527 L
f
195.0176 704.0527 m
198.3335 704.0527 L
198.5889 703.8613 L
198.3335 703.6064 L
195.0176 703.6064 L
194.7622 703.8613 L
195.0176 704.0527 L
f
189.2778 704.0527 m
192.5942 704.0527 L
192.8491 703.8613 L
192.5942 703.6064 L
189.2778 703.6064 L
189.0229 703.8613 L
189.2778 704.0527 L
f
183.4746 704.0527 m
186.8545 704.0527 L
187.1099 703.8613 L
186.8545 703.6064 L
183.4746 703.6064 L
183.2197 703.8613 L
183.4746 704.0527 L
f
182.5181 698.8232 m
182.5181 702.2031 L
182.7729 702.3945 L
182.9644 702.2031 L
182.9644 698.8232 L
182.7729 698.5684 L
182.5181 698.8232 L
f
182.5181 693.084 m
182.5181 696.3999 L
182.7729 696.6553 L
182.9644 696.3999 L
182.9644 693.084 L
182.7729 692.8286 L
182.5181 693.084 L
f
182.5181 687.3442 m
182.5181 690.6602 L
182.7729 690.9155 L
182.9644 690.6602 L
182.9644 687.3442 L
182.7729 687.0889 L
182.5181 687.3442 L
f
182.5181 681.541 m
182.5181 684.9209 L
182.7729 685.1758 L
182.9644 684.9209 L
182.9644 681.541 L
182.7729 681.3496 L
182.5181 681.541 L
f
182.5181 675.8013 m
182.5181 679.1812 L
182.7729 679.3726 L
182.9644 679.1812 L
182.9644 675.8013 L
182.7729 675.5464 L
182.5181 675.8013 L
f
182.5181 670.0615 m
182.5181 673.3779 L
182.7729 673.6328 L
182.9644 673.3779 L
182.9644 670.0615 L
182.7729 669.8066 L
182.5181 670.0615 L
f
182.5181 664.2583 m
182.5181 667.6382 L
182.7729 667.8936 L
182.9644 667.6382 L
182.9644 664.2583 L
182.7729 664.0669 L
182.5181 664.2583 L
f
182.5181 658.5186 m
182.5181 661.8989 L
182.7729 662.1538 L
182.9644 661.8989 L
182.9644 658.5186 L
182.7729 658.2637 L
182.5181 658.5186 L
f
182.5181 652.7793 m
182.5181 656.1592 L
182.7729 656.3506 L
182.9644 656.1592 L
182.9644 652.7793 L
182.7729 652.5244 L
182.5181 652.7793 L
f
182.5181 647.0396 m
182.5181 650.356 L
182.7729 650.6108 L
182.9644 650.356 L
182.9644 647.0396 L
182.7729 646.7847 L
182.5181 647.0396 L
f
182.5181 641.2363 m
182.5181 644.6162 L
182.7729 644.8716 L
182.9644 644.6162 L
182.9644 641.2363 L
182.7729 641.0449 L
182.5181 641.2363 L
f
182.5181 635.4971 m
182.5181 638.877 L
182.7729 639.1318 L
182.9644 638.877 L
182.9644 635.4971 L
182.7729 635.2417 L
182.5181 635.4971 L
f
182.5181 629.7573 m
182.5181 633.1372 L
182.7729 633.3286 L
182.9644 633.1372 L
182.9644 629.7573 L
182.7729 629.502 L
182.5181 629.7573 L
f
182.5181 624.0176 m
182.5181 627.334 L
182.7729 627.5889 L
182.9644 627.334 L
182.9644 624.0176 L
182.7729 623.7627 L
182.5181 624.0176 L
f
182.5181 618.2144 m
182.5181 621.5942 L
182.7729 621.8496 L
182.9644 621.5942 L
182.9644 618.2144 L
182.7729 618.0229 L
182.5181 618.2144 L
f
182.5181 612.4746 m
182.5181 615.855 L
182.7729 616.1099 L
182.9644 615.855 L
182.9644 612.4746 L
182.9009 612.2832 L
182.7729 612.2197 L
182.5815 612.2832 L
182.5181 612.4746 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 709.4736 m
242.0181 712.8535 L
242.2095 713.0449 L
242.4644 712.8535 L
242.4644 709.4736 L
242.2095 709.2183 L
242.0181 709.4736 L
F
246.1636 707.4326 m
242.8472 707.4326 L
242.5923 707.688 L
242.8472 707.8789 L
246.1636 707.8789 L
246.4185 707.688 L
246.1636 707.4326 L
f
251.9668 707.4326 m
248.5869 707.4326 L
248.3315 707.688 L
248.5869 707.8789 L
251.9668 707.8789 L
252.1582 707.688 L
251.9668 707.4326 L
f
257.7061 707.4326 m
254.3262 707.4326 L
254.1348 707.688 L
254.3262 707.8789 L
257.7061 707.8789 L
257.9614 707.688 L
257.7061 707.4326 L
f
263.4458 707.4326 m
260.1294 707.4326 L
259.8745 707.688 L
260.1294 707.8789 L
263.4458 707.8789 L
263.7007 707.688 L
263.4458 707.4326 L
f
269.249 707.4326 m
265.8691 707.4326 L
265.6143 707.688 L
265.8691 707.8789 L
269.249 707.8789 L
269.4404 707.688 L
269.249 707.4326 L
f
274.9888 707.4326 m
271.6089 707.4326 L
271.3535 707.688 L
271.6089 707.8789 L
274.9888 707.8789 L
275.2437 707.688 L
274.9888 707.4326 L
f
277.4121 704.563 m
277.4121 707.688 L
277.667 707.4326 L
277.3481 707.4326 L
277.1567 707.688 L
277.3481 707.8789 L
277.667 707.8789 L
277.7949 707.8154 L
277.8584 707.688 L
277.8584 704.563 L
277.667 704.3716 L
277.4121 704.563 L
f
277.4121 698.8232 m
277.4121 702.2031 L
277.667 702.3945 L
277.8584 702.2031 L
277.8584 698.8232 L
277.667 698.5684 L
277.4121 698.8232 L
f
277.4121 693.084 m
277.4121 696.3999 L
277.667 696.6553 L
277.8584 696.3999 L
277.8584 693.084 L
277.667 692.8286 L
277.4121 693.084 L
f
277.4121 687.3442 m
277.4121 690.6602 L
277.667 690.9155 L
277.8584 690.6602 L
277.8584 687.3442 L
277.667 687.0889 L
277.4121 687.3442 L
f
277.4121 681.541 m
277.4121 684.9209 L
277.667 685.1758 L
277.8584 684.9209 L
277.8584 681.541 L
277.667 681.3496 L
277.4121 681.541 L
f
277.4121 675.8013 m
277.4121 679.1812 L
277.667 679.3726 L
277.8584 679.1812 L
277.8584 675.8013 L
277.667 675.5464 L
277.4121 675.8013 L
f
277.4121 670.0615 m
277.4121 673.3779 L
277.667 673.6328 L
277.8584 673.3779 L
277.8584 670.0615 L
277.667 669.8066 L
277.4121 670.0615 L
f
277.4121 664.2583 m
277.4121 667.6382 L
277.667 667.8936 L
277.8584 667.6382 L
277.8584 664.2583 L
277.667 664.0669 L
277.4121 664.2583 L
f
277.4121 658.5186 m
277.4121 661.8989 L
277.667 662.1538 L
277.8584 661.8989 L
277.8584 658.5186 L
277.667 658.2637 L
277.4121 658.5186 L
f
277.4121 652.7793 m
277.4121 656.1592 L
277.667 656.3506 L
277.8584 656.1592 L
277.8584 652.7793 L
277.667 652.5244 L
277.4121 652.7793 L
f
277.4121 647.0396 m
277.4121 650.356 L
277.667 650.6108 L
277.8584 650.356 L
277.8584 647.0396 L
277.667 646.7847 L
277.4121 647.0396 L
f
277.4121 641.2363 m
277.4121 644.6162 L
277.667 644.8716 L
277.8584 644.6162 L
277.8584 641.2363 L
277.667 641.0449 L
277.4121 641.2363 L
f
277.4121 635.4971 m
277.4121 638.877 L
277.667 639.1318 L
277.8584 638.877 L
277.8584 635.4971 L
277.667 635.2417 L
277.4121 635.4971 L
f
277.4121 629.7573 m
277.4121 633.1372 L
277.667 633.3286 L
277.8584 633.1372 L
277.8584 629.7573 L
277.667 629.502 L
277.4121 629.7573 L
f
277.4121 624.0176 m
277.4121 627.334 L
277.667 627.5889 L
277.8584 627.334 L
277.8584 624.0176 L
277.667 623.7627 L
277.4121 624.0176 L
f
277.4121 618.2144 m
277.4121 621.5942 L
277.667 621.8496 L
277.8584 621.5942 L
277.8584 618.2144 L
277.667 618.0229 L
277.4121 618.2144 L
f
277.4121 612.4746 m
277.4121 615.855 L
277.667 616.1099 L
277.8584 615.855 L
277.8584 612.4746 L
277.7949 612.2832 L
277.667 612.2197 L
277.4756 612.2832 L
277.4121 612.4746 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 711.0679 m
242.0181 714.3838 L
242.082 714.5752 L
242.2095 714.6392 L
242.4009 714.5752 L
242.4644 714.3838 L
242.4644 711.0679 L
242.2095 710.8125 L
242.0181 711.0679 L
F
242.0181 705.3281 m
242.0181 708.6445 L
242.2095 708.8994 L
242.4644 708.6445 L
242.4644 705.3281 L
242.2095 705.0732 L
242.0181 705.3281 L
f
246.5459 703.6064 m
243.166 703.6064 L
242.9111 703.8613 L
243.166 704.0527 L
246.5459 704.0527 L
246.8013 703.8613 L
246.5459 703.6064 L
f
252.2856 703.6064 m
248.9058 703.6064 L
248.7144 703.8613 L
248.9058 704.0527 L
252.2856 704.0527 L
252.5405 703.8613 L
252.2856 703.6064 L
f
258.0249 703.6064 m
254.709 703.6064 L
254.4536 703.8613 L
254.709 704.0527 L
258.0249 704.0527 L
258.2803 703.8613 L
258.0249 703.6064 L
f
263.8286 703.6064 m
260.4482 703.6064 L
260.1934 703.8613 L
260.4482 704.0527 L
263.8286 704.0527 L
264.0195 703.8613 L
263.8286 703.6064 L
f
269.5679 703.6064 m
266.188 703.6064 L
265.9966 703.8613 L
266.188 704.0527 L
269.5679 704.0527 L
269.8232 703.8613 L
269.5679 703.6064 L
f
275.5625 703.8613 m
275.499 703.7979 L
275.4351 703.6699 L
275.3076 703.6064 L
271.9912 703.6064 L
271.7363 703.8613 L
271.9912 704.0527 L
275.3076 704.0527 L
275.0522 703.8613 L
275.3076 704.1162 L
275.5625 703.8613 L
f
279.2617 705.2007 m
279.1338 705.3921 L
279.1978 705.3281 L
278.8149 705.583 L
278.8789 705.583 L
278.4326 705.7744 L
278.4961 705.7744 L
278.0498 705.9023 L
278.1138 705.9023 l
277.5493 706.0669 277.312 705.9287 276.7744 705.7744 C
276.8379 705.7744 L
276.519 705.647 L
276.2002 705.7109 L
276.3281 706.0933 L
276.647 706.2207 L
277.0933 706.4121 L
278.1772 706.4121 L
278.6235 706.2207 L
278.6875 706.2207 L
279.0703 706.0298 L
279.1338 705.9658 L
279.4526 705.7109 L
279.5166 705.647 L
279.644 705.5195 L
279.644 705.1367 L
279.2617 705.2007 L
f
284.1084 703.6064 m
280.792 703.6064 L
280.5371 703.8613 L
280.792 704.0527 L
284.1084 704.0527 L
284.3633 703.8613 L
284.1084 703.6064 L
f
289.9116 703.6064 m
286.5317 703.6064 L
286.2764 703.8613 L
286.5317 704.0527 L
289.9116 704.0527 L
290.1665 703.8613 L
289.9116 703.6064 L
f
295.6514 703.6064 m
292.271 703.6064 L
292.0801 703.8613 L
292.271 704.0527 L
295.6514 704.0527 L
295.9063 703.8613 L
295.6514 703.6064 L
f
301.3906 703.6064 m
298.0747 703.6064 L
297.8193 703.8613 L
298.0747 704.0527 L
301.3906 704.0527 L
301.646 703.8613 L
301.3906 703.6064 L
f
307.1943 703.6064 m
303.814 703.6064 L
303.5591 703.8613 L
303.814 704.0527 L
307.1943 704.0527 L
307.3857 703.8613 L
307.1943 703.6064 L
f
312.9336 703.6064 m
309.5537 703.6064 L
309.2988 703.8613 L
309.5537 704.0527 L
312.9336 704.0527 L
313.1885 703.8613 L
312.9336 703.6064 L
f
318.6729 703.6064 m
315.293 703.6064 L
315.1016 703.8613 L
315.293 704.0527 L
318.6729 704.0527 L
318.9277 703.8613 L
318.6729 703.6064 L
f
324.4131 703.6064 m
321.0967 703.6064 L
320.8418 703.8613 L
321.0967 704.0527 L
324.4131 704.0527 L
324.668 703.8613 L
324.4131 703.6064 L
f
330.2158 703.6064 m
326.8359 703.6064 L
326.5811 703.8613 L
326.8359 704.0527 L
330.2158 704.0527 L
330.4072 703.8613 L
330.2158 703.6064 L
f
335.9551 703.6064 m
332.5752 703.6064 L
332.3203 703.8613 L
332.5752 704.0527 L
335.9551 704.0527 L
336.2109 703.8613 L
335.9551 703.6064 L
f
341.6953 703.6064 m
338.3154 703.6064 L
338.124 703.8613 L
338.3154 704.0527 L
341.6953 704.0527 L
341.9502 703.8613 L
341.6953 703.6064 L
f
347.4346 703.6064 m
344.1182 703.6064 L
343.8633 703.8613 L
344.1182 704.0527 L
347.4346 704.0527 L
347.6895 703.8613 L
347.4346 703.6064 L
f
353.2383 703.6064 m
349.8584 703.6064 L
349.6025 703.8613 L
349.8584 704.0527 L
353.2383 704.0527 L
353.4297 703.8613 L
353.2383 703.6064 L
f
358.9775 703.6064 m
355.5977 703.6064 L
355.3428 703.8613 L
355.5977 704.0527 L
358.9775 704.0527 L
359.2324 703.8613 L
358.9775 703.6064 L
f
364.7168 703.6064 m
361.4014 703.6064 L
361.1455 703.8613 L
361.4014 704.0527 L
364.7168 704.0527 L
364.9727 703.8613 L
364.7168 703.6064 L
f
365.2275 698.8232 m
365.2275 702.2031 L
365.4824 702.3945 L
365.7373 702.2031 L
365.7373 698.8232 L
365.4824 698.5684 L
365.2275 698.8232 L
f
365.2275 693.084 m
365.2275 696.3999 L
365.4824 696.6553 L
365.7373 696.3999 L
365.7373 693.084 L
365.4824 692.8286 L
365.2275 693.084 L
f
365.2275 687.2803 m
365.2275 690.6602 L
365.4824 690.9155 L
365.7373 690.6602 L
365.7373 687.2803 L
365.4824 687.0889 L
365.2275 687.2803 L
f
365.2275 681.541 m
365.2275 684.9209 L
365.4824 685.1758 L
365.7373 684.9209 L
365.7373 681.541 L
365.4824 681.2856 L
365.2275 681.541 L
f
365.2275 675.8013 m
365.2275 679.1812 L
365.4824 679.3726 L
365.7373 679.1812 L
365.7373 675.8013 L
365.4824 675.5464 L
365.2275 675.8013 L
f
365.2275 670.0615 m
365.2275 673.3779 L
365.4824 673.6328 L
365.7373 673.3779 L
365.7373 670.0615 L
365.4824 669.8066 L
365.2275 670.0615 L
f
365.2275 664.2583 m
365.2275 667.6382 L
365.4824 667.8936 L
365.7373 667.6382 L
365.7373 664.2583 L
365.4824 664.0669 L
365.2275 664.2583 L
f
365.2275 658.5186 m
365.2275 661.8989 L
365.4824 662.1538 L
365.7373 661.8989 L
365.7373 658.5186 L
365.4824 658.2637 L
365.2275 658.5186 L
f
365.2275 652.7793 m
365.2275 656.1592 L
365.4824 656.3506 L
365.7373 656.1592 L
365.7373 652.7793 L
365.4824 652.5244 L
365.2275 652.7793 L
f
365.2275 647.0396 m
365.2275 650.356 L
365.4824 650.6108 L
365.7373 650.356 L
365.7373 647.0396 L
365.4824 646.7847 L
365.2275 647.0396 L
f
365.2275 641.2363 m
365.2275 644.6162 L
365.4824 644.8716 L
365.7373 644.6162 L
365.7373 641.2363 L
365.4824 641.0449 L
365.2275 641.2363 L
f
365.2275 635.4971 m
365.2275 638.877 L
365.4824 639.1318 L
365.7373 638.877 L
365.7373 635.4971 L
365.4824 635.2417 L
365.2275 635.4971 L
f
365.2275 629.7573 m
365.2275 633.1372 L
365.4824 633.3286 L
365.7373 633.1372 L
365.7373 629.7573 L
365.4824 629.502 L
365.2275 629.7573 L
f
365.2275 624.0176 m
365.2275 627.334 L
365.4824 627.5889 L
365.7373 627.334 L
365.7373 624.0176 L
365.4824 623.7627 L
365.2275 624.0176 L
f
365.2275 618.2144 m
365.2275 621.5942 L
365.4824 621.8496 L
365.7373 621.5942 L
365.7373 618.2144 L
365.4824 618.0229 L
365.2275 618.2144 L
f
365.2275 612.4746 m
365.2275 615.855 L
365.4824 616.0459 L
365.7373 615.855 L
365.7373 612.4746 L
365.6738 612.2832 L
365.4824 612.2197 L
365.291 612.2832 L
365.2275 612.4746 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
*u
0 O
0 0 0 1 0 0 0 Xa
0 J 0 j 1 w 4 M242.0181 712.4067 m
242.0181 714.4478 L
242.082 714.6392 L
242.2095 714.7026 L
242.4009 714.6392 L
242.4644 714.4478 L
242.4644 712.4067 L
242.2095 712.1519 L
242.0181 712.4067 L
F
242.0181 706.6675 m
242.0181 710.0474 L
242.2095 710.2388 L
242.4644 710.0474 L
242.4644 706.6675 L
242.2095 706.4121 L
242.0181 706.6675 L
f
245.1431 703.6064 m
242.2095 703.6064 L
242.082 703.6699 L
242.0181 703.8613 L
242.0181 704.2441 L
242.2095 704.499 L
242.4644 704.2441 L
242.4644 703.8613 L
242.2095 704.0527 L
245.1431 704.0527 L
245.3979 703.8613 L
245.1431 703.6064 L
f
250.9463 703.6064 m
247.5664 703.6064 L
247.311 703.8613 L
247.5664 704.0527 L
250.9463 704.0527 L
251.2012 703.8613 L
250.9463 703.6064 L
f
256.686 703.6064 m
253.3062 703.6064 L
253.1147 703.8613 L
253.3062 704.0527 L
256.686 704.0527 L
256.9409 703.8613 L
256.686 703.6064 L
f
262.4253 703.6064 m
259.1094 703.6064 L
258.854 703.8613 L
259.1094 704.0527 L
262.4253 704.0527 L
262.6807 703.8613 L
262.4253 703.6064 L
f
268.2285 703.6064 m
264.8486 703.6064 L
264.5938 703.8613 L
264.8486 704.0527 L
268.2285 704.0527 L
268.4199 703.8613 L
268.2285 703.6064 L
f
273.9683 703.6064 m
270.5884 703.6064 L
270.3335 703.8613 L
270.5884 704.0527 L
273.9683 704.0527 L
274.2236 703.8613 L
273.9683 703.6064 L
f
278.3047 705.8384 m
278.0498 705.9023 L
278.1138 705.9023 l
277.5493 706.0669 277.312 705.9287 276.7744 705.7744 C
276.8379 705.7744 L
276.4556 705.583 L
276.1367 705.3281 L
276.1367 705.3921 L
275.8813 705.0093 L
275.8813 705.0732 L
275.7539 704.7539 L
275.4351 704.6265 L
275.3076 704.9453 L
275.499 705.2646 L
275.499 705.3281 L
275.8179 705.647 L
275.8179 705.7109 L
276.2002 705.9658 L
276.2002 706.0298 L
277.0933 706.4121 L
278.1772 706.4121 L
278.4326 706.2847 L
278.5601 706.0298 L
278.3047 705.8384 L
f
282.769 703.6064 m
280.0269 703.6064 L
279.8354 703.6699 L
279.7715 703.7979 L
279.7715 704.0527 L
279.708 704.3076 L
279.708 704.2441 L
279.708 704.3716 L
279.8354 704.6265 L
280.1543 704.499 L
280.2183 704.3716 L
280.2183 703.8613 L
280.0269 704.0527 L
282.769 704.0527 L
283.0239 703.8613 L
282.769 703.6064 L
f
288.5088 703.6064 m
285.1924 703.6064 L
284.9375 703.8613 L
285.1924 704.0527 L
288.5088 704.0527 L
288.7637 703.8613 L
288.5088 703.6064 L
f
294.312 703.6064 m
290.9321 703.6064 L
290.6768 703.8613 L
290.9321 704.0527 L
294.312 704.0527 L
294.5029 703.8613 L
294.312 703.6064 L
f
300.0513 703.6064 m
296.6714 703.6064 L
296.4165 703.8613 L
296.6714 704.0527 L
300.0513 704.0527 L
300.3066 703.8613 L
300.0513 703.6064 L
f
305.791 703.6064 m
302.4746 703.6064 L
302.2197 703.8613 L
302.4746 704.0527 L
305.791 704.0527 L
306.0459 703.8613 L
305.791 703.6064 L
f
311.5303 703.6064 m
308.2148 703.6064 L
307.959 703.8613 L
308.2148 704.0527 L
311.5303 704.0527 L
311.7852 703.8613 L
311.5303 703.6064 L
f
317.334 703.6064 m
313.9541 703.6064 L
313.6992 703.8613 L
313.9541 704.0527 L
317.334 704.0527 L
317.5254 703.8613 L
317.334 703.6064 L
f
323.0732 703.6064 m
319.6934 703.6064 L
319.502 703.8613 L
319.6934 704.0527 L
323.0732 704.0527 L
323.3281 703.8613 L
323.0732 703.6064 L
f
328.8125 703.6064 m
325.4971 703.6064 L
325.2422 703.8613 L
325.4971 704.0527 L
328.8125 704.0527 L
329.0684 703.8613 L
328.8125 703.6064 L
f
334.5527 703.6064 m
331.2363 703.6064 L
330.9814 703.8613 L
331.2363 704.0527 L
334.5527 704.0527 L
334.8076 703.8613 L
334.5527 703.6064 L
f
340.3555 703.6064 m
336.9756 703.6064 L
336.7207 703.8613 L
336.9756 704.0527 L
340.3555 704.0527 L
340.5469 703.8613 L
340.3555 703.6064 L
f
346.0957 703.6064 m
342.7158 703.6064 L
342.5244 703.8613 L
342.7158 704.0527 L
346.0957 704.0527 L
346.3506 703.8613 L
346.0957 703.6064 L
f
351.835 703.6064 m
348.5186 703.6064 L
348.2637 703.8613 L
348.5186 704.0527 L
351.835 704.0527 L
352.0898 703.8613 L
351.835 703.6064 L
f
357.6387 703.6064 m
354.2588 703.6064 L
354.0029 703.8613 L
354.2588 704.0527 L
357.6387 704.0527 L
357.8301 703.8613 L
357.6387 703.6064 L
f
363.3779 703.6064 m
359.998 703.6064 L
359.7432 703.8613 L
359.998 704.0527 L
363.3779 704.0527 L
363.6328 703.8613 L
363.3779 703.6064 L
f
369.1172 703.6064 m
365.7373 703.6064 L
365.5459 703.8613 L
365.7373 704.0527 L
369.1172 704.0527 L
369.373 703.8613 L
369.1172 703.6064 L
f
374.8574 703.6064 m
371.541 703.6064 L
371.2861 703.8613 L
371.541 704.0527 L
374.8574 704.0527 L
375.1123 703.8613 L
374.8574 703.6064 L
f
380.6602 703.6064 m
377.2803 703.6064 L
377.0254 703.8613 L
377.2803 704.0527 L
380.6602 704.0527 L
380.8516 703.8613 L
380.6602 703.6064 L
f
386.4004 703.6064 m
383.0195 703.6064 L
382.7646 703.8613 L
383.0195 704.0527 L
386.4004 704.0527 L
386.6553 703.8613 L
386.4004 703.6064 L
f
392.1396 703.6064 m
388.7598 703.6064 L
388.5684 703.8613 L
388.7598 704.0527 L
392.1396 704.0527 L
392.3945 703.8613 L
392.1396 703.6064 L
f
397.8789 703.6064 m
394.5625 703.6064 L
394.3076 703.8613 L
394.5625 704.0527 L
397.8789 704.0527 L
398.1338 703.8613 L
397.8789 703.6064 L
f
403.6826 703.6064 m
400.3027 703.6064 L
400.0469 703.8613 L
400.3027 704.0527 L
403.6826 704.0527 L
403.874 703.8613 L
403.6826 703.6064 L
f
409.4219 703.6064 m
406.042 703.6064 L
405.7871 703.8613 L
406.042 704.0527 L
409.4219 704.0527 L
409.6768 703.8613 L
409.4219 703.6064 L
f
415.1611 703.6064 m
411.7813 703.6064 L
411.5898 703.8613 L
411.7813 704.0527 L
415.1611 704.0527 L
415.417 703.8613 L
415.1611 703.6064 L
f
420.9014 703.6064 m
417.585 703.6064 L
417.3301 703.8613 L
417.585 704.0527 L
420.9014 704.0527 L
421.1563 703.8613 L
420.9014 703.6064 L
f
426.7041 703.6064 m
423.3242 703.6064 L
423.0693 703.8613 L
423.3242 704.0527 L
426.7041 704.0527 L
426.8955 703.8613 L
426.7041 703.6064 L
f
432.4443 703.6064 m
429.0645 703.6064 L
428.873 703.8613 L
429.0645 704.0527 L
432.4443 704.0527 L
432.6992 703.8613 L
432.4443 703.6064 L
f
438.1836 703.6064 m
434.8672 703.6064 L
434.6123 703.8613 L
434.8672 704.0527 L
438.1836 704.0527 L
438.4385 703.8613 L
438.1836 703.6064 L
f
443.9229 703.6064 m
440.6064 703.6064 L
440.3516 703.8613 L
440.6064 704.0527 L
443.9229 704.0527 L
444.1777 703.8613 L
443.9229 703.6064 L
f
449.7266 703.6064 m
446.3467 703.6064 L
446.0918 703.8613 L
446.3467 704.0527 L
449.7266 704.0527 L
449.918 703.8613 L
449.7266 703.6064 L
f
450.2363 698.8232 m
450.2363 702.2031 L
450.4277 702.3945 L
450.6826 702.2031 L
450.6826 698.8232 L
450.4277 698.5684 L
450.2363 698.8232 L
f
450.2363 693.084 m
450.2363 696.3999 L
450.4277 696.6553 L
450.6826 696.3999 L
450.6826 693.084 L
450.4277 692.8286 L
450.2363 693.084 L
f
450.2363 687.2803 m
450.2363 690.6602 L
450.4277 690.9155 L
450.6826 690.6602 L
450.6826 687.2803 L
450.4277 687.0889 L
450.2363 687.2803 L
f
450.2363 681.541 m
450.2363 684.9209 L
450.4277 685.1758 L
450.6826 684.9209 L
450.6826 681.541 L
450.4277 681.2856 L
450.2363 681.541 L
f
450.2363 675.8013 m
450.2363 679.1812 L
450.4277 679.3726 L
450.6826 679.1812 L
450.6826 675.8013 L
450.4277 675.5464 L
450.2363 675.8013 L
f
450.2363 670.0615 m
450.2363 673.3779 L
450.4277 673.6328 L
450.6826 673.3779 L
450.6826 670.0615 L
450.4277 669.8066 L
450.2363 670.0615 L
f
450.2363 664.2583 m
450.2363 667.6382 L
450.4277 667.8936 L
450.6826 667.6382 L
450.6826 664.2583 L
450.4277 664.0669 L
450.2363 664.2583 L
f
450.2363 658.5186 m
450.2363 661.8989 L
450.4277 662.1538 L
450.6826 661.8989 L
450.6826 658.5186 L
450.4277 658.2637 L
450.2363 658.5186 L
f
450.2363 652.7793 m
450.2363 656.1592 L
450.4277 656.3506 L
450.6826 656.1592 L
450.6826 652.7793 L
450.4277 652.5244 L
450.2363 652.7793 L
f
450.2363 647.0396 m
450.2363 650.356 L
450.4277 650.6108 L
450.6826 650.356 L
450.6826 647.0396 L
450.4277 646.7847 L
450.2363 647.0396 L
f
450.2363 641.2363 m
450.2363 644.6162 L
450.4277 644.8716 L
450.6826 644.6162 L
450.6826 641.2363 L
450.4277 641.0449 L
450.2363 641.2363 L
f
450.2363 635.4971 m
450.2363 638.877 L
450.4277 639.1318 L
450.6826 638.877 L
450.6826 635.4971 L
450.4277 635.2417 L
450.2363 635.4971 L
f
450.2363 629.7573 m
450.2363 633.1372 L
450.4277 633.3286 L
450.6826 633.1372 L
450.6826 629.7573 L
450.4277 629.502 L
450.2363 629.7573 L
f
450.2363 624.0176 m
450.2363 627.334 L
450.4277 627.5889 L
450.6826 627.334 L
450.6826 624.0176 L
450.4277 623.7627 L
450.2363 624.0176 L
f
450.2363 618.2144 m
450.2363 621.5942 L
450.4277 621.8496 L
450.6826 621.5942 L
450.6826 618.2144 L
450.4277 618.0229 L
450.2363 618.2144 L
f
450.2363 612.4746 m
450.2363 615.855 L
450.4277 616.0459 L
450.6826 615.855 L
450.6826 612.4746 L
450.6191 612.2832 L
450.4277 612.2197 L
450.3008 612.2832 L
450.2363 612.4746 L
f
*U
0 R
0 0 0 1 0 0 0 XA
1 J 1 j 0.451 w 10 M246.6733 710.0474 m
242.2095 714.4478 L
237.8091 710.0474 L
S
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
