%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (save.eps)
%%CreationDate: (Mon Sep 22 10:36:13 2008)
%%BoundingBox: 0 0 21 24
%%HiResBoundingBox: 0 0 21 24
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 21 24
userdict begin
DisplayImage
0 0
21 24
12.000000
21 24
0
0
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4B5B5AD8463A58C63A5636363636363636363636363737373737373737373
636363946BA58C6BAD636363F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CBDBDEF
C6C6EF9C9C9CBDBDB5636363BDBDB5DEDEDECECECEC6C6BD9C9C9CCECEEFC6C6EF84639CF4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CBDBDEF94949439007B42007B000000000000
0000000000001818182121211818180000005210844A1084000000F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F49C9C9CBDBDEF636363ADADFFBDBDFF6B6B6BA5A5A5000000A5A5A5E7E7E7CECECEADADAD
6B6B6BC6C6FFB5B5FF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CC6BDEF636363ADADFF
BDBDFF393939A5A5A5080808A5A5A5C6C6C6ADADADA5A5A5212131C6C6FFB5B5FF42006BF4F4F4
F4F4F4F4F4F4F4F4F4F4F4F49C9C9CC6C6EF636363ADADFFBDBDFF9494C6737373737373737373
7373737373737373739494C6C6C6FFB5B5FF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9C
C6C6EF636363ADADFFBDBDFFCECEFFCECEF7D6D6DEDEDEDED6D6D6D6D6DEE7E7FFD6D6FFC6C6FF
B5B5FF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CC6C6EF636363ADADFFBDBDFFCECEFF
C6C6DEC6C6C6B5B5B5ADADADB5B5B5D6D6EFD6D6FFC6C6FFB5B5FF42006BF4F4F4F4F4F4F4F4F4
F4F4F4F4F4F49C9C9CC6C6EF636363ADADFFBDBDFFCECEFFA5A5ADEFEFEFFFFFFFFFFFFFEFEFEF
8C8C94D6D6FFC6C6FFB5B5FF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CC6C6EF636363
B5B5FFBDBDFFCECEFFADADB5FFFFFFB5B5B5000000EFEFEF9C9C9CD6D6FFC6C6FFB5B5FF42006B
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CC6C6EF636363B5B5FFBDBDFFCECEFFADADADFFFFFF
000000000000D6D6D68C8C8CD6D6FFC6C6FFB5B5FF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
9C9C9CC6C6EF636363B5B5FFC6C6FFCECEFF8C8C94E7E7E7DEDEDECECECEADADAD636363D6D6FF
C6C6FFB5B5FF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F49C9C9CCEC6EF636363B5B5FFC6C6FF
CECEFFC6C6E78C8C8CADADAD9C9C9C5A5A63BDBDD6D6D6FFC6C6FFB5B5FF42006BF4F4F4F4F4F4
F4F4F4F4F4F4F4F4F49C9C949C9C9C636363BDBDFFC6C6FFD6D6FFDEDEFFDEDEF7BDBDC6C6C6C6
E7E7F7E7E7FFD6D6FF6373CEBDBDFF42006BF4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
636363BDBDFFCECEFFD6D6FFDEDEFFEFEFFFF7F7FFFFFFFFF7F7FFE7E7FFDEDEFFEFEFFFBDBDFF
4A0073F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F46363636B6B636B6B636B6B636B6B63
6B6B636B6B636B6B636B6B636B6B636B6B636B6B636B6B637B7373F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4

end
%%PageTrailer
%%Trailer
%%EOF
